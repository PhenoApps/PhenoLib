apply plugin: "com.android.library"
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'maven-publish'
apply from: "../dependencies.gradle"

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.publishVersionCode
        versionName versions.publishVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

    packagingOptions { exclude "META-INF/DEPENDENCIES" }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation "com.google.android.material:material:1.3.0"
    implementation "androidx.recyclerview:recyclerview:1.2.0"

    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"

    implementation "com.android.volley:volley:1.2.0"
    implementation "io.swagger:swagger-annotations:1.6.1"
    implementation "org.apache.httpcomponents:httpcore:4.4.13"
    implementation "org.apache.httpcomponents:httpmime:4.5.12"

    api "com.google.code.gson:gson:2.8.6"
    api "com.squareup.okhttp:okhttp:2.7.5"
    api "com.squareup.okhttp:logging-interceptor:2.7.5"
    api "io.gsonfire:gson-fire:1.8.4"
    api "io.swagger.core.v3:swagger-annotations:2.1.2"
    api "javax.annotation:javax.annotation-api:1.3.2"
    api "org.threeten:threetenbp:1.5.0"
}

ext {
    mGroupId = "org.phenoapps"
    mArtifactId = "phenolib"
    mVersionCode = versions.publishVersionCode

    mLibraryName = "PhenoLib"
    mLibraryDescription = "A library for PhenoApps"
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties"))) //Set env variable GPR_USER & GPR_API_KEY if not adding a properties file


afterEvaluate {
    publishing {

        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/phenoapps/phenolib")
                credentials {
                    username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                    password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
                }
            }
        }

        publications {
            phenolib(MavenPublication) {
                groupId mGroupId
                artifactId mArtifactId
                version versions.publishVersion

                artifact("$buildDir/outputs/aar/phenolib-release.aar")

                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                    configurations.api.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

publish.dependsOn assemble