/**
 * BrAPI
 * The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.  <strong>General Reference Documentation</strong> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md\">Asynchronous Processing</a>
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

@ApiModel(description = "")
public class Sample implements Serializable {
  
  @SerializedName("germplasmDbId")
  private String germplasmDbId = null;
  @SerializedName("notes")
  private String notes = null;
  @SerializedName("observationUnitDbId")
  private String observationUnitDbId = null;
  @SerializedName("plantDbId")
  private String plantDbId = null;
  @SerializedName("plateDbId")
  private String plateDbId = null;
  @SerializedName("plateIndex")
  private Integer plateIndex = null;
  @SerializedName("plotDbId")
  private String plotDbId = null;
  @SerializedName("sampleDbId")
  private String sampleDbId = null;
  @SerializedName("sampleTimestamp")
  private Date sampleTimestamp = null;
  @SerializedName("sampleType")
  private String sampleType = null;
  @SerializedName("studyDbId")
  private String studyDbId = null;
  @SerializedName("takenBy")
  private String takenBy = null;
  @SerializedName("tissueType")
  private String tissueType = null;

  /**
   *  The ID which uniquely identifies a germplasm
   **/
  @ApiModelProperty(value = " The ID which uniquely identifies a germplasm")
  public String getGermplasmDbId() {
    return germplasmDbId;
  }
  public void setGermplasmDbId(String germplasmDbId) {
    this.germplasmDbId = germplasmDbId;
  }

  /**
   * Additional notes about a samle
   **/
  @ApiModelProperty(value = "Additional notes about a samle")
  public String getNotes() {
    return notes;
  }
  public void setNotes(String notes) {
    this.notes = notes;
  }

  /**
   * The ID which uniquely identifies an observation unit
   **/
  @ApiModelProperty(value = "The ID which uniquely identifies an observation unit")
  public String getObservationUnitDbId() {
    return observationUnitDbId;
  }
  public void setObservationUnitDbId(String observationUnitDbId) {
    this.observationUnitDbId = observationUnitDbId;
  }

  /**
   * The ID which uniquely identifies a plant. Usually 'plantNumber'
   **/
  @ApiModelProperty(value = "The ID which uniquely identifies a plant. Usually 'plantNumber'")
  public String getPlantDbId() {
    return plantDbId;
  }
  public void setPlantDbId(String plantDbId) {
    this.plantDbId = plantDbId;
  }

  /**
   * The ID which uniquely identifies a plate of samples
   **/
  @ApiModelProperty(value = "The ID which uniquely identifies a plate of samples")
  public String getPlateDbId() {
    return plateDbId;
  }
  public void setPlateDbId(String plateDbId) {
    this.plateDbId = plateDbId;
  }

  /**
   * The index number of this sample on a plate
   **/
  @ApiModelProperty(value = "The index number of this sample on a plate")
  public Integer getPlateIndex() {
    return plateIndex;
  }
  public void setPlateIndex(Integer plateIndex) {
    this.plateIndex = plateIndex;
  }

  /**
   *  The ID which uniquely identifies a plot. Usually 'plotNumber'
   **/
  @ApiModelProperty(value = " The ID which uniquely identifies a plot. Usually 'plotNumber'")
  public String getPlotDbId() {
    return plotDbId;
  }
  public void setPlotDbId(String plotDbId) {
    this.plotDbId = plotDbId;
  }

  /**
   * The ID which uniquely identifies a sample
   **/
  @ApiModelProperty(value = "The ID which uniquely identifies a sample")
  public String getSampleDbId() {
    return sampleDbId;
  }
  public void setSampleDbId(String sampleDbId) {
    this.sampleDbId = sampleDbId;
  }

  /**
   * The date and time a sample was collected from the field
   **/
  @ApiModelProperty(value = "The date and time a sample was collected from the field")
  public Date getSampleTimestamp() {
    return sampleTimestamp;
  }
  public void setSampleTimestamp(Date sampleTimestamp) {
    this.sampleTimestamp = sampleTimestamp;
  }

  /**
   * The type of sample taken. ex. 'DNA', 'RNA', 'Tissue', etc 
   **/
  @ApiModelProperty(value = "The type of sample taken. ex. 'DNA', 'RNA', 'Tissue', etc ")
  public String getSampleType() {
    return sampleType;
  }
  public void setSampleType(String sampleType) {
    this.sampleType = sampleType;
  }

  /**
   * The ID which uniquely identifies a study within the given database server
   **/
  @ApiModelProperty(value = "The ID which uniquely identifies a study within the given database server")
  public String getStudyDbId() {
    return studyDbId;
  }
  public void setStudyDbId(String studyDbId) {
    this.studyDbId = studyDbId;
  }

  /**
   * The name or identifier of the entity which took the sample from the field
   **/
  @ApiModelProperty(value = "The name or identifier of the entity which took the sample from the field")
  public String getTakenBy() {
    return takenBy;
  }
  public void setTakenBy(String takenBy) {
    this.takenBy = takenBy;
  }

  /**
   * The type of tissue sampled. ex. 'Leaf', 'Root', etc.
   **/
  @ApiModelProperty(value = "The type of tissue sampled. ex. 'Leaf', 'Root', etc.")
  public String getTissueType() {
    return tissueType;
  }
  public void setTissueType(String tissueType) {
    this.tissueType = tissueType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Sample sample = (Sample) o;
    return (this.germplasmDbId == null ? sample.germplasmDbId == null : this.germplasmDbId.equals(sample.germplasmDbId)) &&
        (this.notes == null ? sample.notes == null : this.notes.equals(sample.notes)) &&
        (this.observationUnitDbId == null ? sample.observationUnitDbId == null : this.observationUnitDbId.equals(sample.observationUnitDbId)) &&
        (this.plantDbId == null ? sample.plantDbId == null : this.plantDbId.equals(sample.plantDbId)) &&
        (this.plateDbId == null ? sample.plateDbId == null : this.plateDbId.equals(sample.plateDbId)) &&
        (this.plateIndex == null ? sample.plateIndex == null : this.plateIndex.equals(sample.plateIndex)) &&
        (this.plotDbId == null ? sample.plotDbId == null : this.plotDbId.equals(sample.plotDbId)) &&
        (this.sampleDbId == null ? sample.sampleDbId == null : this.sampleDbId.equals(sample.sampleDbId)) &&
        (this.sampleTimestamp == null ? sample.sampleTimestamp == null : this.sampleTimestamp.equals(sample.sampleTimestamp)) &&
        (this.sampleType == null ? sample.sampleType == null : this.sampleType.equals(sample.sampleType)) &&
        (this.studyDbId == null ? sample.studyDbId == null : this.studyDbId.equals(sample.studyDbId)) &&
        (this.takenBy == null ? sample.takenBy == null : this.takenBy.equals(sample.takenBy)) &&
        (this.tissueType == null ? sample.tissueType == null : this.tissueType.equals(sample.tissueType));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.germplasmDbId == null ? 0: this.germplasmDbId.hashCode());
    result = 31 * result + (this.notes == null ? 0: this.notes.hashCode());
    result = 31 * result + (this.observationUnitDbId == null ? 0: this.observationUnitDbId.hashCode());
    result = 31 * result + (this.plantDbId == null ? 0: this.plantDbId.hashCode());
    result = 31 * result + (this.plateDbId == null ? 0: this.plateDbId.hashCode());
    result = 31 * result + (this.plateIndex == null ? 0: this.plateIndex.hashCode());
    result = 31 * result + (this.plotDbId == null ? 0: this.plotDbId.hashCode());
    result = 31 * result + (this.sampleDbId == null ? 0: this.sampleDbId.hashCode());
    result = 31 * result + (this.sampleTimestamp == null ? 0: this.sampleTimestamp.hashCode());
    result = 31 * result + (this.sampleType == null ? 0: this.sampleType.hashCode());
    result = 31 * result + (this.studyDbId == null ? 0: this.studyDbId.hashCode());
    result = 31 * result + (this.takenBy == null ? 0: this.takenBy.hashCode());
    result = 31 * result + (this.tissueType == null ? 0: this.tissueType.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Sample {\n");
    
    sb.append("  germplasmDbId: ").append(germplasmDbId).append("\n");
    sb.append("  notes: ").append(notes).append("\n");
    sb.append("  observationUnitDbId: ").append(observationUnitDbId).append("\n");
    sb.append("  plantDbId: ").append(plantDbId).append("\n");
    sb.append("  plateDbId: ").append(plateDbId).append("\n");
    sb.append("  plateIndex: ").append(plateIndex).append("\n");
    sb.append("  plotDbId: ").append(plotDbId).append("\n");
    sb.append("  sampleDbId: ").append(sampleDbId).append("\n");
    sb.append("  sampleTimestamp: ").append(sampleTimestamp).append("\n");
    sb.append("  sampleType: ").append(sampleType).append("\n");
    sb.append("  studyDbId: ").append(studyDbId).append("\n");
    sb.append("  takenBy: ").append(takenBy).append("\n");
    sb.append("  tissueType: ").append(tissueType).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
