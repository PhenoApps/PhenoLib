/**
 * BrAPI
 * The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.  <strong>General Reference Documentation</strong> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md\">Asynchronous Processing</a>
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

@ApiModel(description = "")
public class GermplasmSearchRequest implements Serializable {
  
  @SerializedName("accessionNumbers")
  private List<String> accessionNumbers = null;
  @SerializedName("commonCropNames")
  private List<String> commonCropNames = null;
  @SerializedName("germplasmDbIds")
  private List<String> germplasmDbIds = null;
  @SerializedName("germplasmGenus")
  private List<String> germplasmGenus = null;
  @SerializedName("germplasmNames")
  private List<String> germplasmNames = null;
  @SerializedName("germplasmPUIs")
  private List<String> germplasmPUIs = null;
  @SerializedName("germplasmSpecies")
  private List<String> germplasmSpecies = null;
  @SerializedName("page")
  private Integer page = null;
  @SerializedName("pageSize")
  private Integer pageSize = null;

  /**
   * List unique identifiers for accessions within a genebank
   **/
  @ApiModelProperty(value = "List unique identifiers for accessions within a genebank")
  public List<String> getAccessionNumbers() {
    return accessionNumbers;
  }
  public void setAccessionNumbers(List<String> accessionNumbers) {
    this.accessionNumbers = accessionNumbers;
  }

  /**
   * List crops to search by
   **/
  @ApiModelProperty(value = "List crops to search by")
  public List<String> getCommonCropNames() {
    return commonCropNames;
  }
  public void setCommonCropNames(List<String> commonCropNames) {
    this.commonCropNames = commonCropNames;
  }

  /**
   * List of IDs which uniquely identify germplasm
   **/
  @ApiModelProperty(value = "List of IDs which uniquely identify germplasm")
  public List<String> getGermplasmDbIds() {
    return germplasmDbIds;
  }
  public void setGermplasmDbIds(List<String> germplasmDbIds) {
    this.germplasmDbIds = germplasmDbIds;
  }

  /**
   * List of Genus names to identify germplasm
   **/
  @ApiModelProperty(value = "List of Genus names to identify germplasm")
  public List<String> getGermplasmGenus() {
    return germplasmGenus;
  }
  public void setGermplasmGenus(List<String> germplasmGenus) {
    this.germplasmGenus = germplasmGenus;
  }

  /**
   * List of human readable names to identify germplasm
   **/
  @ApiModelProperty(value = "List of human readable names to identify germplasm")
  public List<String> getGermplasmNames() {
    return germplasmNames;
  }
  public void setGermplasmNames(List<String> germplasmNames) {
    this.germplasmNames = germplasmNames;
  }

  /**
   * List of Permanent Unique Identifiers to identify germplasm
   **/
  @ApiModelProperty(value = "List of Permanent Unique Identifiers to identify germplasm")
  public List<String> getGermplasmPUIs() {
    return germplasmPUIs;
  }
  public void setGermplasmPUIs(List<String> germplasmPUIs) {
    this.germplasmPUIs = germplasmPUIs;
  }

  /**
   * List of Species names to identify germplasm
   **/
  @ApiModelProperty(value = "List of Species names to identify germplasm")
  public List<String> getGermplasmSpecies() {
    return germplasmSpecies;
  }
  public void setGermplasmSpecies(List<String> germplasmSpecies) {
    this.germplasmSpecies = germplasmSpecies;
  }

  /**
   * Which page of the \"data\" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.
   **/
  @ApiModelProperty(value = "Which page of the \"data\" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.")
  public Integer getPage() {
    return page;
  }
  public void setPage(Integer page) {
    this.page = page;
  }

  /**
   * The maximum number of items to return per page of the \"data\" array. Default is 1000.
   **/
  @ApiModelProperty(value = "The maximum number of items to return per page of the \"data\" array. Default is 1000.")
  public Integer getPageSize() {
    return pageSize;
  }
  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GermplasmSearchRequest germplasmSearchRequest = (GermplasmSearchRequest) o;
    return (this.accessionNumbers == null ? germplasmSearchRequest.accessionNumbers == null : this.accessionNumbers.equals(germplasmSearchRequest.accessionNumbers)) &&
        (this.commonCropNames == null ? germplasmSearchRequest.commonCropNames == null : this.commonCropNames.equals(germplasmSearchRequest.commonCropNames)) &&
        (this.germplasmDbIds == null ? germplasmSearchRequest.germplasmDbIds == null : this.germplasmDbIds.equals(germplasmSearchRequest.germplasmDbIds)) &&
        (this.germplasmGenus == null ? germplasmSearchRequest.germplasmGenus == null : this.germplasmGenus.equals(germplasmSearchRequest.germplasmGenus)) &&
        (this.germplasmNames == null ? germplasmSearchRequest.germplasmNames == null : this.germplasmNames.equals(germplasmSearchRequest.germplasmNames)) &&
        (this.germplasmPUIs == null ? germplasmSearchRequest.germplasmPUIs == null : this.germplasmPUIs.equals(germplasmSearchRequest.germplasmPUIs)) &&
        (this.germplasmSpecies == null ? germplasmSearchRequest.germplasmSpecies == null : this.germplasmSpecies.equals(germplasmSearchRequest.germplasmSpecies)) &&
        (this.page == null ? germplasmSearchRequest.page == null : this.page.equals(germplasmSearchRequest.page)) &&
        (this.pageSize == null ? germplasmSearchRequest.pageSize == null : this.pageSize.equals(germplasmSearchRequest.pageSize));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.accessionNumbers == null ? 0: this.accessionNumbers.hashCode());
    result = 31 * result + (this.commonCropNames == null ? 0: this.commonCropNames.hashCode());
    result = 31 * result + (this.germplasmDbIds == null ? 0: this.germplasmDbIds.hashCode());
    result = 31 * result + (this.germplasmGenus == null ? 0: this.germplasmGenus.hashCode());
    result = 31 * result + (this.germplasmNames == null ? 0: this.germplasmNames.hashCode());
    result = 31 * result + (this.germplasmPUIs == null ? 0: this.germplasmPUIs.hashCode());
    result = 31 * result + (this.germplasmSpecies == null ? 0: this.germplasmSpecies.hashCode());
    result = 31 * result + (this.page == null ? 0: this.page.hashCode());
    result = 31 * result + (this.pageSize == null ? 0: this.pageSize.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class GermplasmSearchRequest {\n");
    
    sb.append("  accessionNumbers: ").append(accessionNumbers).append("\n");
    sb.append("  commonCropNames: ").append(commonCropNames).append("\n");
    sb.append("  germplasmDbIds: ").append(germplasmDbIds).append("\n");
    sb.append("  germplasmGenus: ").append(germplasmGenus).append("\n");
    sb.append("  germplasmNames: ").append(germplasmNames).append("\n");
    sb.append("  germplasmPUIs: ").append(germplasmPUIs).append("\n");
    sb.append("  germplasmSpecies: ").append(germplasmSpecies).append("\n");
    sb.append("  page: ").append(page).append("\n");
    sb.append("  pageSize: ").append(pageSize).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
