/**
 * BrAPI
 * The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.  <strong>General Reference Documentation</strong> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md\">Asynchronous Processing</a>
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

@ApiModel(description = "")
public class Observation implements Serializable {
  
  @SerializedName("germplasmDbId")
  private String germplasmDbId = null;
  @SerializedName("germplasmName")
  private String germplasmName = null;
  @SerializedName("observationDbId")
  private String observationDbId = null;
  @SerializedName("observationLevel")
  private String observationLevel = null;
  @SerializedName("observationTimeStamp")
  private Date observationTimeStamp = null;
  @SerializedName("observationUnitDbId")
  private String observationUnitDbId = null;
  @SerializedName("observationUnitName")
  private String observationUnitName = null;
  @SerializedName("observationVariableDbId")
  private String observationVariableDbId = null;
  @SerializedName("observationVariableName")
  private String observationVariableName = null;
  @SerializedName("operator")
  private String operator = null;
  @SerializedName("studyDbId")
  private String studyDbId = null;
  @SerializedName("uploadedBy")
  private String uploadedBy = null;
  @SerializedName("value")
  private String value = null;

  /**
   *  The ID which uniquely identifies a germplasm
   **/
  @ApiModelProperty(value = " The ID which uniquely identifies a germplasm")
  public String getGermplasmDbId() {
    return germplasmDbId;
  }
  public void setGermplasmDbId(String germplasmDbId) {
    this.germplasmDbId = germplasmDbId;
  }

  /**
   * Name of the germplasm. It can be the prefered name and does not have to be unique.
   **/
  @ApiModelProperty(value = "Name of the germplasm. It can be the prefered name and does not have to be unique.")
  public String getGermplasmName() {
    return germplasmName;
  }
  public void setGermplasmName(String germplasmName) {
    this.germplasmName = germplasmName;
  }

  /**
   * The ID which uniquely identifies an observation
   **/
  @ApiModelProperty(value = "The ID which uniquely identifies an observation")
  public String getObservationDbId() {
    return observationDbId;
  }
  public void setObservationDbId(String observationDbId) {
    this.observationDbId = observationDbId;
  }

  /**
   * The level of an observation unit. ex. \"plot\", \"plant\"
   **/
  @ApiModelProperty(value = "The level of an observation unit. ex. \"plot\", \"plant\"")
  public String getObservationLevel() {
    return observationLevel;
  }
  public void setObservationLevel(String observationLevel) {
    this.observationLevel = observationLevel;
  }

  /**
   * The date and time  when this observation was made 
   **/
  @ApiModelProperty(value = "The date and time  when this observation was made ")
  public Date getObservationTimeStamp() {
    return observationTimeStamp;
  }
  public void setObservationTimeStamp(Date observationTimeStamp) {
    this.observationTimeStamp = observationTimeStamp;
  }

  /**
   * The ID which uniquely identifies an observation unit
   **/
  @ApiModelProperty(value = "The ID which uniquely identifies an observation unit")
  public String getObservationUnitDbId() {
    return observationUnitDbId;
  }
  public void setObservationUnitDbId(String observationUnitDbId) {
    this.observationUnitDbId = observationUnitDbId;
  }

  /**
   * A human readable name for an observation unit
   **/
  @ApiModelProperty(value = "A human readable name for an observation unit")
  public String getObservationUnitName() {
    return observationUnitName;
  }
  public void setObservationUnitName(String observationUnitName) {
    this.observationUnitName = observationUnitName;
  }

  /**
   * The ID which uniquely identifies an observation variable
   **/
  @ApiModelProperty(value = "The ID which uniquely identifies an observation variable")
  public String getObservationVariableDbId() {
    return observationVariableDbId;
  }
  public void setObservationVariableDbId(String observationVariableDbId) {
    this.observationVariableDbId = observationVariableDbId;
  }

  /**
   * A human readable name for an observation variable
   **/
  @ApiModelProperty(value = "A human readable name for an observation variable")
  public String getObservationVariableName() {
    return observationVariableName;
  }
  public void setObservationVariableName(String observationVariableName) {
    this.observationVariableName = observationVariableName;
  }

  /**
   * The name or identifier of the entity which collected the observation
   **/
  @ApiModelProperty(value = "The name or identifier of the entity which collected the observation")
  public String getOperator() {
    return operator;
  }
  public void setOperator(String operator) {
    this.operator = operator;
  }

  /**
   * The ID which uniquely identifies a study within the given database server
   **/
  @ApiModelProperty(value = "The ID which uniquely identifies a study within the given database server")
  public String getStudyDbId() {
    return studyDbId;
  }
  public void setStudyDbId(String studyDbId) {
    this.studyDbId = studyDbId;
  }

  /**
   * The name or id of the user who uploaded the observation to the database system
   **/
  @ApiModelProperty(value = "The name or id of the user who uploaded the observation to the database system")
  public String getUploadedBy() {
    return uploadedBy;
  }
  public void setUploadedBy(String uploadedBy) {
    this.uploadedBy = uploadedBy;
  }

  /**
   * The value of the data collected as an observation
   **/
  @ApiModelProperty(value = "The value of the data collected as an observation")
  public String getValue() {
    return value;
  }
  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Observation observation = (Observation) o;
    return (this.germplasmDbId == null ? observation.germplasmDbId == null : this.germplasmDbId.equals(observation.germplasmDbId)) &&
        (this.germplasmName == null ? observation.germplasmName == null : this.germplasmName.equals(observation.germplasmName)) &&
        (this.observationDbId == null ? observation.observationDbId == null : this.observationDbId.equals(observation.observationDbId)) &&
        (this.observationLevel == null ? observation.observationLevel == null : this.observationLevel.equals(observation.observationLevel)) &&
        (this.observationTimeStamp == null ? observation.observationTimeStamp == null : this.observationTimeStamp.equals(observation.observationTimeStamp)) &&
        (this.observationUnitDbId == null ? observation.observationUnitDbId == null : this.observationUnitDbId.equals(observation.observationUnitDbId)) &&
        (this.observationUnitName == null ? observation.observationUnitName == null : this.observationUnitName.equals(observation.observationUnitName)) &&
        (this.observationVariableDbId == null ? observation.observationVariableDbId == null : this.observationVariableDbId.equals(observation.observationVariableDbId)) &&
        (this.observationVariableName == null ? observation.observationVariableName == null : this.observationVariableName.equals(observation.observationVariableName)) &&
        (this.operator == null ? observation.operator == null : this.operator.equals(observation.operator)) &&
        (this.studyDbId == null ? observation.studyDbId == null : this.studyDbId.equals(observation.studyDbId)) &&
        (this.uploadedBy == null ? observation.uploadedBy == null : this.uploadedBy.equals(observation.uploadedBy)) &&
        (this.value == null ? observation.value == null : this.value.equals(observation.value));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.germplasmDbId == null ? 0: this.germplasmDbId.hashCode());
    result = 31 * result + (this.germplasmName == null ? 0: this.germplasmName.hashCode());
    result = 31 * result + (this.observationDbId == null ? 0: this.observationDbId.hashCode());
    result = 31 * result + (this.observationLevel == null ? 0: this.observationLevel.hashCode());
    result = 31 * result + (this.observationTimeStamp == null ? 0: this.observationTimeStamp.hashCode());
    result = 31 * result + (this.observationUnitDbId == null ? 0: this.observationUnitDbId.hashCode());
    result = 31 * result + (this.observationUnitName == null ? 0: this.observationUnitName.hashCode());
    result = 31 * result + (this.observationVariableDbId == null ? 0: this.observationVariableDbId.hashCode());
    result = 31 * result + (this.observationVariableName == null ? 0: this.observationVariableName.hashCode());
    result = 31 * result + (this.operator == null ? 0: this.operator.hashCode());
    result = 31 * result + (this.studyDbId == null ? 0: this.studyDbId.hashCode());
    result = 31 * result + (this.uploadedBy == null ? 0: this.uploadedBy.hashCode());
    result = 31 * result + (this.value == null ? 0: this.value.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Observation {\n");
    
    sb.append("  germplasmDbId: ").append(germplasmDbId).append("\n");
    sb.append("  germplasmName: ").append(germplasmName).append("\n");
    sb.append("  observationDbId: ").append(observationDbId).append("\n");
    sb.append("  observationLevel: ").append(observationLevel).append("\n");
    sb.append("  observationTimeStamp: ").append(observationTimeStamp).append("\n");
    sb.append("  observationUnitDbId: ").append(observationUnitDbId).append("\n");
    sb.append("  observationUnitName: ").append(observationUnitName).append("\n");
    sb.append("  observationVariableDbId: ").append(observationVariableDbId).append("\n");
    sb.append("  observationVariableName: ").append(observationVariableName).append("\n");
    sb.append("  operator: ").append(operator).append("\n");
    sb.append("  studyDbId: ").append(studyDbId).append("\n");
    sb.append("  uploadedBy: ").append(uploadedBy).append("\n");
    sb.append("  value: ").append(value).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
