/**
 * BrAPI
 * The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.  <strong>General Reference Documentation</strong> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md\">Asynchronous Processing</a>
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.Contact;
import io.swagger.client.model.TrialDatasetAuthorship;
import io.swagger.client.model.TrialStudies;
import java.util.*;
import java.util.Date;
import java.util.Map;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

@ApiModel(description = "")
public class Trial implements Serializable {
  
  @SerializedName("active")
  private Boolean active = null;
  @SerializedName("additionalInfo")
  private Map<String, String> additionalInfo = null;
  @SerializedName("contacts")
  private List<Contact> contacts = null;
  @SerializedName("datasetAuthorship")
  private TrialDatasetAuthorship datasetAuthorship = null;
  @SerializedName("endDate")
  private Date endDate = null;
  @SerializedName("programDbId")
  private String programDbId = null;
  @SerializedName("programName")
  private String programName = null;
  @SerializedName("startDate")
  private Date startDate = null;
  @SerializedName("studies")
  private List<TrialStudies> studies = null;
  @SerializedName("trialDbId")
  private String trialDbId = null;
  @SerializedName("trialName")
  private String trialName = null;

  /**
   * Is this trail currently active
   **/
  @ApiModelProperty(value = "Is this trail currently active")
  public Boolean getActive() {
    return active;
  }
  public void setActive(Boolean active) {
    this.active = active;
  }

  /**
   * Additional arbitrary info
   **/
  @ApiModelProperty(value = "Additional arbitrary info")
  public Map<String, String> getAdditionalInfo() {
    return additionalInfo;
  }
  public void setAdditionalInfo(Map<String, String> additionalInfo) {
    this.additionalInfo = additionalInfo;
  }

  /**
   * List of contact entities associated with this trial
   **/
  @ApiModelProperty(value = "List of contact entities associated with this trial")
  public List<Contact> getContacts() {
    return contacts;
  }
  public void setContacts(List<Contact> contacts) {
    this.contacts = contacts;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public TrialDatasetAuthorship getDatasetAuthorship() {
    return datasetAuthorship;
  }
  public void setDatasetAuthorship(TrialDatasetAuthorship datasetAuthorship) {
    this.datasetAuthorship = datasetAuthorship;
  }

  /**
   * The date this trial ends
   **/
  @ApiModelProperty(value = "The date this trial ends")
  public Date getEndDate() {
    return endDate;
  }
  public void setEndDate(Date endDate) {
    this.endDate = endDate;
  }

  /**
   * A program identifier to search for
   **/
  @ApiModelProperty(value = "A program identifier to search for")
  public String getProgramDbId() {
    return programDbId;
  }
  public void setProgramDbId(String programDbId) {
    this.programDbId = programDbId;
  }

  /**
   * The human readable name of a program
   **/
  @ApiModelProperty(value = "The human readable name of a program")
  public String getProgramName() {
    return programName;
  }
  public void setProgramName(String programName) {
    this.programName = programName;
  }

  /**
   * The date this trial started
   **/
  @ApiModelProperty(value = "The date this trial started")
  public Date getStartDate() {
    return startDate;
  }
  public void setStartDate(Date startDate) {
    this.startDate = startDate;
  }

  /**
   * List of studies inside this trial
   **/
  @ApiModelProperty(value = "List of studies inside this trial")
  public List<TrialStudies> getStudies() {
    return studies;
  }
  public void setStudies(List<TrialStudies> studies) {
    this.studies = studies;
  }

  /**
   * The ID which uniquely identifies a trial
   **/
  @ApiModelProperty(value = "The ID which uniquely identifies a trial")
  public String getTrialDbId() {
    return trialDbId;
  }
  public void setTrialDbId(String trialDbId) {
    this.trialDbId = trialDbId;
  }

  /**
   * The human readable name of a trial
   **/
  @ApiModelProperty(value = "The human readable name of a trial")
  public String getTrialName() {
    return trialName;
  }
  public void setTrialName(String trialName) {
    this.trialName = trialName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Trial trial = (Trial) o;
    return (this.active == null ? trial.active == null : this.active.equals(trial.active)) &&
        (this.additionalInfo == null ? trial.additionalInfo == null : this.additionalInfo.equals(trial.additionalInfo)) &&
        (this.contacts == null ? trial.contacts == null : this.contacts.equals(trial.contacts)) &&
        (this.datasetAuthorship == null ? trial.datasetAuthorship == null : this.datasetAuthorship.equals(trial.datasetAuthorship)) &&
        (this.endDate == null ? trial.endDate == null : this.endDate.equals(trial.endDate)) &&
        (this.programDbId == null ? trial.programDbId == null : this.programDbId.equals(trial.programDbId)) &&
        (this.programName == null ? trial.programName == null : this.programName.equals(trial.programName)) &&
        (this.startDate == null ? trial.startDate == null : this.startDate.equals(trial.startDate)) &&
        (this.studies == null ? trial.studies == null : this.studies.equals(trial.studies)) &&
        (this.trialDbId == null ? trial.trialDbId == null : this.trialDbId.equals(trial.trialDbId)) &&
        (this.trialName == null ? trial.trialName == null : this.trialName.equals(trial.trialName));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.active == null ? 0: this.active.hashCode());
    result = 31 * result + (this.additionalInfo == null ? 0: this.additionalInfo.hashCode());
    result = 31 * result + (this.contacts == null ? 0: this.contacts.hashCode());
    result = 31 * result + (this.datasetAuthorship == null ? 0: this.datasetAuthorship.hashCode());
    result = 31 * result + (this.endDate == null ? 0: this.endDate.hashCode());
    result = 31 * result + (this.programDbId == null ? 0: this.programDbId.hashCode());
    result = 31 * result + (this.programName == null ? 0: this.programName.hashCode());
    result = 31 * result + (this.startDate == null ? 0: this.startDate.hashCode());
    result = 31 * result + (this.studies == null ? 0: this.studies.hashCode());
    result = 31 * result + (this.trialDbId == null ? 0: this.trialDbId.hashCode());
    result = 31 * result + (this.trialName == null ? 0: this.trialName.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Trial {\n");
    
    sb.append("  active: ").append(active).append("\n");
    sb.append("  additionalInfo: ").append(additionalInfo).append("\n");
    sb.append("  contacts: ").append(contacts).append("\n");
    sb.append("  datasetAuthorship: ").append(datasetAuthorship).append("\n");
    sb.append("  endDate: ").append(endDate).append("\n");
    sb.append("  programDbId: ").append(programDbId).append("\n");
    sb.append("  programName: ").append(programName).append("\n");
    sb.append("  startDate: ").append(startDate).append("\n");
    sb.append("  studies: ").append(studies).append("\n");
    sb.append("  trialDbId: ").append(trialDbId).append("\n");
    sb.append("  trialName: ").append(trialName).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
