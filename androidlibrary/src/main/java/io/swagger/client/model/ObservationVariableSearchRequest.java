/**
 * BrAPI
 * The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.  <strong>General Reference Documentation</strong> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md\">Asynchronous Processing</a>
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

@ApiModel(description = "")
public class ObservationVariableSearchRequest implements Serializable {
  
  @SerializedName("datatypes")
  private List<String> datatypes = null;
  @SerializedName("methodDbIds")
  private List<String> methodDbIds = null;
  @SerializedName("names")
  private List<String> names = null;
  @SerializedName("observationVariableDbIds")
  private List<String> observationVariableDbIds = null;
  @SerializedName("ontologyDbIds")
  private List<String> ontologyDbIds = null;
  @SerializedName("ontologyXrefs")
  private List<String> ontologyXrefs = null;
  @SerializedName("page")
  private Integer page = null;
  @SerializedName("pageSize")
  private Integer pageSize = null;
  @SerializedName("scaleDbIds")
  private List<String> scaleDbIds = null;
  @SerializedName("traitClasses")
  private List<String> traitClasses = null;

  /**
   * List of scale data types to filter search results
   **/
  @ApiModelProperty(value = "List of scale data types to filter search results")
  public List<String> getDatatypes() {
    return datatypes;
  }
  public void setDatatypes(List<String> datatypes) {
    this.datatypes = datatypes;
  }

  /**
   * List of methods to filter search results
   **/
  @ApiModelProperty(value = "List of methods to filter search results")
  public List<String> getMethodDbIds() {
    return methodDbIds;
  }
  public void setMethodDbIds(List<String> methodDbIds) {
    this.methodDbIds = methodDbIds;
  }

  /**
   * List of human readable observation variable names to search for
   **/
  @ApiModelProperty(value = "List of human readable observation variable names to search for")
  public List<String> getNames() {
    return names;
  }
  public void setNames(List<String> names) {
    this.names = names;
  }

  /**
   * List of observation variable IDs to search for
   **/
  @ApiModelProperty(value = "List of observation variable IDs to search for")
  public List<String> getObservationVariableDbIds() {
    return observationVariableDbIds;
  }
  public void setObservationVariableDbIds(List<String> observationVariableDbIds) {
    this.observationVariableDbIds = observationVariableDbIds;
  }

  /**
   * List of ontology IDs to search for
   **/
  @ApiModelProperty(value = "List of ontology IDs to search for")
  public List<String> getOntologyDbIds() {
    return ontologyDbIds;
  }
  public void setOntologyDbIds(List<String> ontologyDbIds) {
    this.ontologyDbIds = ontologyDbIds;
  }

  /**
   * List of ontology IDs to search for
   **/
  @ApiModelProperty(value = "List of ontology IDs to search for")
  public List<String> getOntologyXrefs() {
    return ontologyXrefs;
  }
  public void setOntologyXrefs(List<String> ontologyXrefs) {
    this.ontologyXrefs = ontologyXrefs;
  }

  /**
   * Which page of the \"data\" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.
   **/
  @ApiModelProperty(value = "Which page of the \"data\" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.")
  public Integer getPage() {
    return page;
  }
  public void setPage(Integer page) {
    this.page = page;
  }

  /**
   * The maximum number of items to return per page of the \"data\" array. Default is 1000.
   **/
  @ApiModelProperty(value = "The maximum number of items to return per page of the \"data\" array. Default is 1000.")
  public Integer getPageSize() {
    return pageSize;
  }
  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  /**
   * List of scales to filter search results
   **/
  @ApiModelProperty(value = "List of scales to filter search results")
  public List<String> getScaleDbIds() {
    return scaleDbIds;
  }
  public void setScaleDbIds(List<String> scaleDbIds) {
    this.scaleDbIds = scaleDbIds;
  }

  /**
   * List of trait classes to filter search results
   **/
  @ApiModelProperty(value = "List of trait classes to filter search results")
  public List<String> getTraitClasses() {
    return traitClasses;
  }
  public void setTraitClasses(List<String> traitClasses) {
    this.traitClasses = traitClasses;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObservationVariableSearchRequest observationVariableSearchRequest = (ObservationVariableSearchRequest) o;
    return (this.datatypes == null ? observationVariableSearchRequest.datatypes == null : this.datatypes.equals(observationVariableSearchRequest.datatypes)) &&
        (this.methodDbIds == null ? observationVariableSearchRequest.methodDbIds == null : this.methodDbIds.equals(observationVariableSearchRequest.methodDbIds)) &&
        (this.names == null ? observationVariableSearchRequest.names == null : this.names.equals(observationVariableSearchRequest.names)) &&
        (this.observationVariableDbIds == null ? observationVariableSearchRequest.observationVariableDbIds == null : this.observationVariableDbIds.equals(observationVariableSearchRequest.observationVariableDbIds)) &&
        (this.ontologyDbIds == null ? observationVariableSearchRequest.ontologyDbIds == null : this.ontologyDbIds.equals(observationVariableSearchRequest.ontologyDbIds)) &&
        (this.ontologyXrefs == null ? observationVariableSearchRequest.ontologyXrefs == null : this.ontologyXrefs.equals(observationVariableSearchRequest.ontologyXrefs)) &&
        (this.page == null ? observationVariableSearchRequest.page == null : this.page.equals(observationVariableSearchRequest.page)) &&
        (this.pageSize == null ? observationVariableSearchRequest.pageSize == null : this.pageSize.equals(observationVariableSearchRequest.pageSize)) &&
        (this.scaleDbIds == null ? observationVariableSearchRequest.scaleDbIds == null : this.scaleDbIds.equals(observationVariableSearchRequest.scaleDbIds)) &&
        (this.traitClasses == null ? observationVariableSearchRequest.traitClasses == null : this.traitClasses.equals(observationVariableSearchRequest.traitClasses));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.datatypes == null ? 0: this.datatypes.hashCode());
    result = 31 * result + (this.methodDbIds == null ? 0: this.methodDbIds.hashCode());
    result = 31 * result + (this.names == null ? 0: this.names.hashCode());
    result = 31 * result + (this.observationVariableDbIds == null ? 0: this.observationVariableDbIds.hashCode());
    result = 31 * result + (this.ontologyDbIds == null ? 0: this.ontologyDbIds.hashCode());
    result = 31 * result + (this.ontologyXrefs == null ? 0: this.ontologyXrefs.hashCode());
    result = 31 * result + (this.page == null ? 0: this.page.hashCode());
    result = 31 * result + (this.pageSize == null ? 0: this.pageSize.hashCode());
    result = 31 * result + (this.scaleDbIds == null ? 0: this.scaleDbIds.hashCode());
    result = 31 * result + (this.traitClasses == null ? 0: this.traitClasses.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObservationVariableSearchRequest {\n");
    
    sb.append("  datatypes: ").append(datatypes).append("\n");
    sb.append("  methodDbIds: ").append(methodDbIds).append("\n");
    sb.append("  names: ").append(names).append("\n");
    sb.append("  observationVariableDbIds: ").append(observationVariableDbIds).append("\n");
    sb.append("  ontologyDbIds: ").append(ontologyDbIds).append("\n");
    sb.append("  ontologyXrefs: ").append(ontologyXrefs).append("\n");
    sb.append("  page: ").append(page).append("\n");
    sb.append("  pageSize: ").append(pageSize).append("\n");
    sb.append("  scaleDbIds: ").append(scaleDbIds).append("\n");
    sb.append("  traitClasses: ").append(traitClasses).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
