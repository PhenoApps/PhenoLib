/**
 * BrAPI
 * The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.  <strong>General Reference Documentation</strong> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md\">Asynchronous Processing</a>
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

@ApiModel(description = "")
public class ProgenyProgeny implements Serializable {
  
  @SerializedName("defaultDisplayName")
  private String defaultDisplayName = null;
  @SerializedName("germplasmDbId")
  private String germplasmDbId = null;
  public enum ParentTypeEnum {
     MALE,  FEMALE,  SELF,  POPULATION, 
  };
  @SerializedName("parentType")
  private ParentTypeEnum parentType = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDefaultDisplayName() {
    return defaultDisplayName;
  }
  public void setDefaultDisplayName(String defaultDisplayName) {
    this.defaultDisplayName = defaultDisplayName;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getGermplasmDbId() {
    return germplasmDbId;
  }
  public void setGermplasmDbId(String germplasmDbId) {
    this.germplasmDbId = germplasmDbId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ParentTypeEnum getParentType() {
    return parentType;
  }
  public void setParentType(ParentTypeEnum parentType) {
    this.parentType = parentType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProgenyProgeny progenyProgeny = (ProgenyProgeny) o;
    return (this.defaultDisplayName == null ? progenyProgeny.defaultDisplayName == null : this.defaultDisplayName.equals(progenyProgeny.defaultDisplayName)) &&
        (this.germplasmDbId == null ? progenyProgeny.germplasmDbId == null : this.germplasmDbId.equals(progenyProgeny.germplasmDbId)) &&
        (this.parentType == null ? progenyProgeny.parentType == null : this.parentType.equals(progenyProgeny.parentType));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.defaultDisplayName == null ? 0: this.defaultDisplayName.hashCode());
    result = 31 * result + (this.germplasmDbId == null ? 0: this.germplasmDbId.hashCode());
    result = 31 * result + (this.parentType == null ? 0: this.parentType.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProgenyProgeny {\n");
    
    sb.append("  defaultDisplayName: ").append(defaultDisplayName).append("\n");
    sb.append("  germplasmDbId: ").append(germplasmDbId).append("\n");
    sb.append("  parentType: ").append(parentType).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
