/**
 * BrAPI
 * The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.  <strong>General Reference Documentation</strong> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md\">Asynchronous Processing</a>
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.Contact;
import io.swagger.client.model.DataLink;
import io.swagger.client.model.Location;
import io.swagger.client.model.StudyLastUpdate;
import java.util.*;
import java.util.Date;
import java.util.Map;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

@ApiModel(description = "")
public class Study implements Serializable {
  
  @SerializedName("active")
  private String active = null;
  @SerializedName("additionalInfo")
  private Map<String, String> additionalInfo = null;
  @SerializedName("contacts")
  private List<Contact> contacts = null;
  @SerializedName("dataLinks")
  private List<DataLink> dataLinks = null;
  @SerializedName("endDate")
  private Date endDate = null;
  @SerializedName("lastUpdate")
  private StudyLastUpdate lastUpdate = null;
  @SerializedName("license")
  private String license = null;
  @SerializedName("location")
  private Location location = null;
  @SerializedName("seasons")
  private List<String> seasons = null;
  @SerializedName("startDate")
  private Date startDate = null;
  @SerializedName("studyDbId")
  private String studyDbId = null;
  @SerializedName("studyDescription")
  private String studyDescription = null;
  @SerializedName("studyName")
  private String studyName = null;
  @SerializedName("studyType")
  private String studyType = null;
  @SerializedName("trialDbId")
  private String trialDbId = null;
  @SerializedName("trialName")
  private String trialName = null;

  /**
   * Is this study currently active
   **/
  @ApiModelProperty(value = "Is this study currently active")
  public String getActive() {
    return active;
  }
  public void setActive(String active) {
    this.active = active;
  }

  /**
   * Additional arbitrary info
   **/
  @ApiModelProperty(value = "Additional arbitrary info")
  public Map<String, String> getAdditionalInfo() {
    return additionalInfo;
  }
  public void setAdditionalInfo(Map<String, String> additionalInfo) {
    this.additionalInfo = additionalInfo;
  }

  /**
   * List of contact entities associated with this study
   **/
  @ApiModelProperty(value = "List of contact entities associated with this study")
  public List<Contact> getContacts() {
    return contacts;
  }
  public void setContacts(List<Contact> contacts) {
    this.contacts = contacts;
  }

  /**
   * List of links to extra data files associated with this study. Extra data could include notes, images, and reference data.
   **/
  @ApiModelProperty(value = "List of links to extra data files associated with this study. Extra data could include notes, images, and reference data.")
  public List<DataLink> getDataLinks() {
    return dataLinks;
  }
  public void setDataLinks(List<DataLink> dataLinks) {
    this.dataLinks = dataLinks;
  }

  /**
   * The date the study ends
   **/
  @ApiModelProperty(value = "The date the study ends")
  public Date getEndDate() {
    return endDate;
  }
  public void setEndDate(Date endDate) {
    this.endDate = endDate;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public StudyLastUpdate getLastUpdate() {
    return lastUpdate;
  }
  public void setLastUpdate(StudyLastUpdate lastUpdate) {
    this.lastUpdate = lastUpdate;
  }

  /**
   * The usage license associated with the study data
   **/
  @ApiModelProperty(value = "The usage license associated with the study data")
  public String getLicense() {
    return license;
  }
  public void setLicense(String license) {
    this.license = license;
  }

  /**
   * The location reference where this study is located.
   **/
  @ApiModelProperty(value = "The location reference where this study is located.")
  public Location getLocation() {
    return location;
  }
  public void setLocation(Location location) {
    this.location = location;
  }

  /**
   * List of seasons over which this study was performed.
   **/
  @ApiModelProperty(value = "List of seasons over which this study was performed.")
  public List<String> getSeasons() {
    return seasons;
  }
  public void setSeasons(List<String> seasons) {
    this.seasons = seasons;
  }

  /**
   * The date this study started
   **/
  @ApiModelProperty(value = "The date this study started")
  public Date getStartDate() {
    return startDate;
  }
  public void setStartDate(Date startDate) {
    this.startDate = startDate;
  }

  /**
   * The ID which uniquely identifies a study within the given database server
   **/
  @ApiModelProperty(value = "The ID which uniquely identifies a study within the given database server")
  public String getStudyDbId() {
    return studyDbId;
  }
  public void setStudyDbId(String studyDbId) {
    this.studyDbId = studyDbId;
  }

  /**
   * The description of this study
   **/
  @ApiModelProperty(value = "The description of this study")
  public String getStudyDescription() {
    return studyDescription;
  }
  public void setStudyDescription(String studyDescription) {
    this.studyDescription = studyDescription;
  }

  /**
   * The human readable name for a study
   **/
  @ApiModelProperty(value = "The human readable name for a study")
  public String getStudyName() {
    return studyName;
  }
  public void setStudyName(String studyName) {
    this.studyName = studyName;
  }

  /**
   * The type of study being performed. ex. \"Yeald Trial\", etc
   **/
  @ApiModelProperty(value = "The type of study being performed. ex. \"Yeald Trial\", etc")
  public String getStudyType() {
    return studyType;
  }
  public void setStudyType(String studyType) {
    this.studyType = studyType;
  }

  /**
   * The ID which uniquely identifies a trial
   **/
  @ApiModelProperty(value = "The ID which uniquely identifies a trial")
  public String getTrialDbId() {
    return trialDbId;
  }
  public void setTrialDbId(String trialDbId) {
    this.trialDbId = trialDbId;
  }

  /**
   * The human readable name of a trial
   **/
  @ApiModelProperty(value = "The human readable name of a trial")
  public String getTrialName() {
    return trialName;
  }
  public void setTrialName(String trialName) {
    this.trialName = trialName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Study study = (Study) o;
    return (this.active == null ? study.active == null : this.active.equals(study.active)) &&
        (this.additionalInfo == null ? study.additionalInfo == null : this.additionalInfo.equals(study.additionalInfo)) &&
        (this.contacts == null ? study.contacts == null : this.contacts.equals(study.contacts)) &&
        (this.dataLinks == null ? study.dataLinks == null : this.dataLinks.equals(study.dataLinks)) &&
        (this.endDate == null ? study.endDate == null : this.endDate.equals(study.endDate)) &&
        (this.lastUpdate == null ? study.lastUpdate == null : this.lastUpdate.equals(study.lastUpdate)) &&
        (this.license == null ? study.license == null : this.license.equals(study.license)) &&
        (this.location == null ? study.location == null : this.location.equals(study.location)) &&
        (this.seasons == null ? study.seasons == null : this.seasons.equals(study.seasons)) &&
        (this.startDate == null ? study.startDate == null : this.startDate.equals(study.startDate)) &&
        (this.studyDbId == null ? study.studyDbId == null : this.studyDbId.equals(study.studyDbId)) &&
        (this.studyDescription == null ? study.studyDescription == null : this.studyDescription.equals(study.studyDescription)) &&
        (this.studyName == null ? study.studyName == null : this.studyName.equals(study.studyName)) &&
        (this.studyType == null ? study.studyType == null : this.studyType.equals(study.studyType)) &&
        (this.trialDbId == null ? study.trialDbId == null : this.trialDbId.equals(study.trialDbId)) &&
        (this.trialName == null ? study.trialName == null : this.trialName.equals(study.trialName));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.active == null ? 0: this.active.hashCode());
    result = 31 * result + (this.additionalInfo == null ? 0: this.additionalInfo.hashCode());
    result = 31 * result + (this.contacts == null ? 0: this.contacts.hashCode());
    result = 31 * result + (this.dataLinks == null ? 0: this.dataLinks.hashCode());
    result = 31 * result + (this.endDate == null ? 0: this.endDate.hashCode());
    result = 31 * result + (this.lastUpdate == null ? 0: this.lastUpdate.hashCode());
    result = 31 * result + (this.license == null ? 0: this.license.hashCode());
    result = 31 * result + (this.location == null ? 0: this.location.hashCode());
    result = 31 * result + (this.seasons == null ? 0: this.seasons.hashCode());
    result = 31 * result + (this.startDate == null ? 0: this.startDate.hashCode());
    result = 31 * result + (this.studyDbId == null ? 0: this.studyDbId.hashCode());
    result = 31 * result + (this.studyDescription == null ? 0: this.studyDescription.hashCode());
    result = 31 * result + (this.studyName == null ? 0: this.studyName.hashCode());
    result = 31 * result + (this.studyType == null ? 0: this.studyType.hashCode());
    result = 31 * result + (this.trialDbId == null ? 0: this.trialDbId.hashCode());
    result = 31 * result + (this.trialName == null ? 0: this.trialName.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Study {\n");
    
    sb.append("  active: ").append(active).append("\n");
    sb.append("  additionalInfo: ").append(additionalInfo).append("\n");
    sb.append("  contacts: ").append(contacts).append("\n");
    sb.append("  dataLinks: ").append(dataLinks).append("\n");
    sb.append("  endDate: ").append(endDate).append("\n");
    sb.append("  lastUpdate: ").append(lastUpdate).append("\n");
    sb.append("  license: ").append(license).append("\n");
    sb.append("  location: ").append(location).append("\n");
    sb.append("  seasons: ").append(seasons).append("\n");
    sb.append("  startDate: ").append(startDate).append("\n");
    sb.append("  studyDbId: ").append(studyDbId).append("\n");
    sb.append("  studyDescription: ").append(studyDescription).append("\n");
    sb.append("  studyName: ").append(studyName).append("\n");
    sb.append("  studyType: ").append(studyType).append("\n");
    sb.append("  trialDbId: ").append(trialDbId).append("\n");
    sb.append("  trialName: ").append(trialName).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
