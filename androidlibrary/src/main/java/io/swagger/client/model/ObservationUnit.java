/**
 * BrAPI
 * The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.  <strong>General Reference Documentation</strong> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md\">Asynchronous Processing</a>
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.Observation;
import io.swagger.client.model.ObservationTreatment;
import io.swagger.client.model.ObservationUnitXref;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

@ApiModel(description = "")
public class ObservationUnit implements Serializable {
  
  @SerializedName("X")
  private String X = null;
  @SerializedName("Y")
  private String Y = null;
  @SerializedName("blockNumber")
  private String blockNumber = null;
  @SerializedName("entryNumber")
  private String entryNumber = null;
  @SerializedName("entryType")
  private String entryType = null;
  @SerializedName("germplasmDbId")
  private String germplasmDbId = null;
  @SerializedName("germplasmName")
  private String germplasmName = null;
  @SerializedName("observationLevel")
  private String observationLevel = null;
  @SerializedName("observationLevels")
  private String observationLevels = null;
  @SerializedName("observationUnitDbId")
  private String observationUnitDbId = null;
  @SerializedName("observationUnitName")
  private String observationUnitName = null;
  @SerializedName("observationUnitXref")
  private List<ObservationUnitXref> observationUnitXref = null;
  @SerializedName("observations")
  private List<Observation> observations = null;
  @SerializedName("plantNumber")
  private String plantNumber = null;
  @SerializedName("plotNumber")
  private String plotNumber = null;
  @SerializedName("programName")
  private String programName = null;
  @SerializedName("replicate")
  private String replicate = null;
  @SerializedName("studyDbId")
  private String studyDbId = null;
  @SerializedName("studyLocation")
  private String studyLocation = null;
  @SerializedName("studyLocationDbId")
  private String studyLocationDbId = null;
  @SerializedName("studyName")
  private String studyName = null;
  @SerializedName("treatments")
  private List<ObservationTreatment> treatments = null;

  /**
   * The X position coordinate for an observation unit. Different systems may use different coordinate systems.
   **/
  @ApiModelProperty(value = "The X position coordinate for an observation unit. Different systems may use different coordinate systems.")
  public String getX() {
    return X;
  }
  public void setX(String X) {
    this.X = X;
  }

  /**
   * The Y position coordinate for an observation unit. Different systems may use different coordinate systems.
   **/
  @ApiModelProperty(value = "The Y position coordinate for an observation unit. Different systems may use different coordinate systems.")
  public String getY() {
    return Y;
  }
  public void setY(String Y) {
    this.Y = Y;
  }

  /**
   * The block number for an observation unit. Different systems may use different block designs.
   **/
  @ApiModelProperty(value = "The block number for an observation unit. Different systems may use different block designs.")
  public String getBlockNumber() {
    return blockNumber;
  }
  public void setBlockNumber(String blockNumber) {
    this.blockNumber = blockNumber;
  }

  /**
   * The entry number for an observation unit. Different systems may use different entry systems.
   **/
  @ApiModelProperty(value = "The entry number for an observation unit. Different systems may use different entry systems.")
  public String getEntryNumber() {
    return entryNumber;
  }
  public void setEntryNumber(String entryNumber) {
    this.entryNumber = entryNumber;
  }

  /**
   * The type of entry for this observation unit. ex. \"check\", \"test\", \"filler\"
   **/
  @ApiModelProperty(value = "The type of entry for this observation unit. ex. \"check\", \"test\", \"filler\"")
  public String getEntryType() {
    return entryType;
  }
  public void setEntryType(String entryType) {
    this.entryType = entryType;
  }

  /**
   *  The ID which uniquely identifies a germplasm
   **/
  @ApiModelProperty(value = " The ID which uniquely identifies a germplasm")
  public String getGermplasmDbId() {
    return germplasmDbId;
  }
  public void setGermplasmDbId(String germplasmDbId) {
    this.germplasmDbId = germplasmDbId;
  }

  /**
   * Name of the germplasm. It can be the prefered name and does not have to be unique.
   **/
  @ApiModelProperty(value = "Name of the germplasm. It can be the prefered name and does not have to be unique.")
  public String getGermplasmName() {
    return germplasmName;
  }
  public void setGermplasmName(String germplasmName) {
    this.germplasmName = germplasmName;
  }

  /**
   * The level of an observation unit. ex. \"plot\", \"plant\"
   **/
  @ApiModelProperty(value = "The level of an observation unit. ex. \"plot\", \"plant\"")
  public String getObservationLevel() {
    return observationLevel;
  }
  public void setObservationLevel(String observationLevel) {
    this.observationLevel = observationLevel;
  }

  /**
   * Concatenation of the levels of this observationUnit. Used to handle non canonical level structures. Format levelType:levelID,levelType:levelID
   **/
  @ApiModelProperty(value = "Concatenation of the levels of this observationUnit. Used to handle non canonical level structures. Format levelType:levelID,levelType:levelID")
  public String getObservationLevels() {
    return observationLevels;
  }
  public void setObservationLevels(String observationLevels) {
    this.observationLevels = observationLevels;
  }

  /**
   * The ID which uniquely identifies an observation unit
   **/
  @ApiModelProperty(value = "The ID which uniquely identifies an observation unit")
  public String getObservationUnitDbId() {
    return observationUnitDbId;
  }
  public void setObservationUnitDbId(String observationUnitDbId) {
    this.observationUnitDbId = observationUnitDbId;
  }

  /**
   * A human readable name for an observation unit
   **/
  @ApiModelProperty(value = "A human readable name for an observation unit")
  public String getObservationUnitName() {
    return observationUnitName;
  }
  public void setObservationUnitName(String observationUnitName) {
    this.observationUnitName = observationUnitName;
  }

  /**
   * A list of external references to this observation unit
   **/
  @ApiModelProperty(value = "A list of external references to this observation unit")
  public List<ObservationUnitXref> getObservationUnitXref() {
    return observationUnitXref;
  }
  public void setObservationUnitXref(List<ObservationUnitXref> observationUnitXref) {
    this.observationUnitXref = observationUnitXref;
  }

  /**
   * List of observations associated with this observation unit
   **/
  @ApiModelProperty(value = "List of observations associated with this observation unit")
  public List<Observation> getObservations() {
    return observations;
  }
  public void setObservations(List<Observation> observations) {
    this.observations = observations;
  }

  /**
   * The plant number in a field. Applicable for observationLevel: \"plant\"
   **/
  @ApiModelProperty(value = "The plant number in a field. Applicable for observationLevel: \"plant\"")
  public String getPlantNumber() {
    return plantNumber;
  }
  public void setPlantNumber(String plantNumber) {
    this.plantNumber = plantNumber;
  }

  /**
   * The plot number in a field. Applicable for observationLevel: \"plot\"
   **/
  @ApiModelProperty(value = "The plot number in a field. Applicable for observationLevel: \"plot\"")
  public String getPlotNumber() {
    return plotNumber;
  }
  public void setPlotNumber(String plotNumber) {
    this.plotNumber = plotNumber;
  }

  /**
   * The human readable name of a program
   **/
  @ApiModelProperty(value = "The human readable name of a program")
  public String getProgramName() {
    return programName;
  }
  public void setProgramName(String programName) {
    this.programName = programName;
  }

  /**
   * The replicate number of an observation unit. May be the same as blockNumber.
   **/
  @ApiModelProperty(value = "The replicate number of an observation unit. May be the same as blockNumber.")
  public String getReplicate() {
    return replicate;
  }
  public void setReplicate(String replicate) {
    this.replicate = replicate;
  }

  /**
   * The ID which uniquely identifies a study within the given database server
   **/
  @ApiModelProperty(value = "The ID which uniquely identifies a study within the given database server")
  public String getStudyDbId() {
    return studyDbId;
  }
  public void setStudyDbId(String studyDbId) {
    this.studyDbId = studyDbId;
  }

  /**
   * The human readable name of a location associated with this study
   **/
  @ApiModelProperty(value = "The human readable name of a location associated with this study")
  public String getStudyLocation() {
    return studyLocation;
  }
  public void setStudyLocation(String studyLocation) {
    this.studyLocation = studyLocation;
  }

  /**
   * The ID which uniquely identifies a location, associated with this study
   **/
  @ApiModelProperty(value = "The ID which uniquely identifies a location, associated with this study")
  public String getStudyLocationDbId() {
    return studyLocationDbId;
  }
  public void setStudyLocationDbId(String studyLocationDbId) {
    this.studyLocationDbId = studyLocationDbId;
  }

  /**
   * The human readable name for a study
   **/
  @ApiModelProperty(value = "The human readable name for a study")
  public String getStudyName() {
    return studyName;
  }
  public void setStudyName(String studyName) {
    this.studyName = studyName;
  }

  /**
   * List of treatments applied to an observation unit.
   **/
  @ApiModelProperty(value = "List of treatments applied to an observation unit.")
  public List<ObservationTreatment> getTreatments() {
    return treatments;
  }
  public void setTreatments(List<ObservationTreatment> treatments) {
    this.treatments = treatments;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObservationUnit observationUnit = (ObservationUnit) o;
    return (this.X == null ? observationUnit.X == null : this.X.equals(observationUnit.X)) &&
        (this.Y == null ? observationUnit.Y == null : this.Y.equals(observationUnit.Y)) &&
        (this.blockNumber == null ? observationUnit.blockNumber == null : this.blockNumber.equals(observationUnit.blockNumber)) &&
        (this.entryNumber == null ? observationUnit.entryNumber == null : this.entryNumber.equals(observationUnit.entryNumber)) &&
        (this.entryType == null ? observationUnit.entryType == null : this.entryType.equals(observationUnit.entryType)) &&
        (this.germplasmDbId == null ? observationUnit.germplasmDbId == null : this.germplasmDbId.equals(observationUnit.germplasmDbId)) &&
        (this.germplasmName == null ? observationUnit.germplasmName == null : this.germplasmName.equals(observationUnit.germplasmName)) &&
        (this.observationLevel == null ? observationUnit.observationLevel == null : this.observationLevel.equals(observationUnit.observationLevel)) &&
        (this.observationLevels == null ? observationUnit.observationLevels == null : this.observationLevels.equals(observationUnit.observationLevels)) &&
        (this.observationUnitDbId == null ? observationUnit.observationUnitDbId == null : this.observationUnitDbId.equals(observationUnit.observationUnitDbId)) &&
        (this.observationUnitName == null ? observationUnit.observationUnitName == null : this.observationUnitName.equals(observationUnit.observationUnitName)) &&
        (this.observationUnitXref == null ? observationUnit.observationUnitXref == null : this.observationUnitXref.equals(observationUnit.observationUnitXref)) &&
        (this.observations == null ? observationUnit.observations == null : this.observations.equals(observationUnit.observations)) &&
        (this.plantNumber == null ? observationUnit.plantNumber == null : this.plantNumber.equals(observationUnit.plantNumber)) &&
        (this.plotNumber == null ? observationUnit.plotNumber == null : this.plotNumber.equals(observationUnit.plotNumber)) &&
        (this.programName == null ? observationUnit.programName == null : this.programName.equals(observationUnit.programName)) &&
        (this.replicate == null ? observationUnit.replicate == null : this.replicate.equals(observationUnit.replicate)) &&
        (this.studyDbId == null ? observationUnit.studyDbId == null : this.studyDbId.equals(observationUnit.studyDbId)) &&
        (this.studyLocation == null ? observationUnit.studyLocation == null : this.studyLocation.equals(observationUnit.studyLocation)) &&
        (this.studyLocationDbId == null ? observationUnit.studyLocationDbId == null : this.studyLocationDbId.equals(observationUnit.studyLocationDbId)) &&
        (this.studyName == null ? observationUnit.studyName == null : this.studyName.equals(observationUnit.studyName)) &&
        (this.treatments == null ? observationUnit.treatments == null : this.treatments.equals(observationUnit.treatments));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.X == null ? 0: this.X.hashCode());
    result = 31 * result + (this.Y == null ? 0: this.Y.hashCode());
    result = 31 * result + (this.blockNumber == null ? 0: this.blockNumber.hashCode());
    result = 31 * result + (this.entryNumber == null ? 0: this.entryNumber.hashCode());
    result = 31 * result + (this.entryType == null ? 0: this.entryType.hashCode());
    result = 31 * result + (this.germplasmDbId == null ? 0: this.germplasmDbId.hashCode());
    result = 31 * result + (this.germplasmName == null ? 0: this.germplasmName.hashCode());
    result = 31 * result + (this.observationLevel == null ? 0: this.observationLevel.hashCode());
    result = 31 * result + (this.observationLevels == null ? 0: this.observationLevels.hashCode());
    result = 31 * result + (this.observationUnitDbId == null ? 0: this.observationUnitDbId.hashCode());
    result = 31 * result + (this.observationUnitName == null ? 0: this.observationUnitName.hashCode());
    result = 31 * result + (this.observationUnitXref == null ? 0: this.observationUnitXref.hashCode());
    result = 31 * result + (this.observations == null ? 0: this.observations.hashCode());
    result = 31 * result + (this.plantNumber == null ? 0: this.plantNumber.hashCode());
    result = 31 * result + (this.plotNumber == null ? 0: this.plotNumber.hashCode());
    result = 31 * result + (this.programName == null ? 0: this.programName.hashCode());
    result = 31 * result + (this.replicate == null ? 0: this.replicate.hashCode());
    result = 31 * result + (this.studyDbId == null ? 0: this.studyDbId.hashCode());
    result = 31 * result + (this.studyLocation == null ? 0: this.studyLocation.hashCode());
    result = 31 * result + (this.studyLocationDbId == null ? 0: this.studyLocationDbId.hashCode());
    result = 31 * result + (this.studyName == null ? 0: this.studyName.hashCode());
    result = 31 * result + (this.treatments == null ? 0: this.treatments.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObservationUnit {\n");
    
    sb.append("  X: ").append(X).append("\n");
    sb.append("  Y: ").append(Y).append("\n");
    sb.append("  blockNumber: ").append(blockNumber).append("\n");
    sb.append("  entryNumber: ").append(entryNumber).append("\n");
    sb.append("  entryType: ").append(entryType).append("\n");
    sb.append("  germplasmDbId: ").append(germplasmDbId).append("\n");
    sb.append("  germplasmName: ").append(germplasmName).append("\n");
    sb.append("  observationLevel: ").append(observationLevel).append("\n");
    sb.append("  observationLevels: ").append(observationLevels).append("\n");
    sb.append("  observationUnitDbId: ").append(observationUnitDbId).append("\n");
    sb.append("  observationUnitName: ").append(observationUnitName).append("\n");
    sb.append("  observationUnitXref: ").append(observationUnitXref).append("\n");
    sb.append("  observations: ").append(observations).append("\n");
    sb.append("  plantNumber: ").append(plantNumber).append("\n");
    sb.append("  plotNumber: ").append(plotNumber).append("\n");
    sb.append("  programName: ").append(programName).append("\n");
    sb.append("  replicate: ").append(replicate).append("\n");
    sb.append("  studyDbId: ").append(studyDbId).append("\n");
    sb.append("  studyLocation: ").append(studyLocation).append("\n");
    sb.append("  studyLocationDbId: ").append(studyLocationDbId).append("\n");
    sb.append("  studyName: ").append(studyName).append("\n");
    sb.append("  treatments: ").append(treatments).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
