/**
 * BrAPI
 * The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.  <strong>General Reference Documentation</strong> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md\">Asynchronous Processing</a>
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.GermplasmDonors;
import io.swagger.client.model.TaxonID;
import java.util.*;
import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

@ApiModel(description = "")
public class Germplasm implements Serializable {
  
  @SerializedName("accessionNumber")
  private String accessionNumber = null;
  @SerializedName("acquisitionDate")
  private Date acquisitionDate = null;
  @SerializedName("biologicalStatusOfAccessionCode")
  private Integer biologicalStatusOfAccessionCode = null;
  @SerializedName("breedingMethodDbId")
  private String breedingMethodDbId = null;
  @SerializedName("commonCropName")
  private String commonCropName = null;
  @SerializedName("countryOfOriginCode")
  private String countryOfOriginCode = null;
  @SerializedName("defaultDisplayName")
  private String defaultDisplayName = null;
  @SerializedName("donors")
  private List<GermplasmDonors> donors = null;
  @SerializedName("genus")
  private String genus = null;
  @SerializedName("germplasmDbId")
  private String germplasmDbId = null;
  @SerializedName("germplasmName")
  private String germplasmName = null;
  @SerializedName("germplasmPUI")
  private String germplasmPUI = null;
  @SerializedName("instituteCode")
  private String instituteCode = null;
  @SerializedName("instituteName")
  private String instituteName = null;
  @SerializedName("pedigree")
  private String pedigree = null;
  @SerializedName("seedSource")
  private String seedSource = null;
  @SerializedName("species")
  private String species = null;
  @SerializedName("speciesAuthority")
  private String speciesAuthority = null;
  @SerializedName("subtaxa")
  private String subtaxa = null;
  @SerializedName("subtaxaAuthority")
  private String subtaxaAuthority = null;
  @SerializedName("synonyms")
  private List<String> synonyms = null;
  @SerializedName("taxonIds")
  private List<TaxonID> taxonIds = null;
  @SerializedName("typeOfGermplasmStorageCode")
  private List<String> typeOfGermplasmStorageCode = null;

  /**
   * This is the unique identifier for accessions within a genebank, and is assigned when a sample is entered into the genebank collection
   **/
  @ApiModelProperty(value = "This is the unique identifier for accessions within a genebank, and is assigned when a sample is entered into the genebank collection")
  public String getAccessionNumber() {
    return accessionNumber;
  }
  public void setAccessionNumber(String accessionNumber) {
    this.accessionNumber = accessionNumber;
  }

  /**
   * The date this germplasm was aquired by the genebank (MCPD)
   **/
  @ApiModelProperty(value = "The date this germplasm was aquired by the genebank (MCPD)")
  public Date getAcquisitionDate() {
    return acquisitionDate;
  }
  public void setAcquisitionDate(Date acquisitionDate) {
    this.acquisitionDate = acquisitionDate;
  }

  /**
   * The 3 digit code representing the biological status of the accession (MCPD)
   **/
  @ApiModelProperty(value = "The 3 digit code representing the biological status of the accession (MCPD)")
  public Integer getBiologicalStatusOfAccessionCode() {
    return biologicalStatusOfAccessionCode;
  }
  public void setBiologicalStatusOfAccessionCode(Integer biologicalStatusOfAccessionCode) {
    this.biologicalStatusOfAccessionCode = biologicalStatusOfAccessionCode;
  }

  /**
   * The unique identifier for the breeding method used to create this germplasm
   **/
  @ApiModelProperty(value = "The unique identifier for the breeding method used to create this germplasm")
  public String getBreedingMethodDbId() {
    return breedingMethodDbId;
  }
  public void setBreedingMethodDbId(String breedingMethodDbId) {
    this.breedingMethodDbId = breedingMethodDbId;
  }

  /**
   * Common name for the crop (MCPD)
   **/
  @ApiModelProperty(value = "Common name for the crop (MCPD)")
  public String getCommonCropName() {
    return commonCropName;
  }
  public void setCommonCropName(String commonCropName) {
    this.commonCropName = commonCropName;
  }

  /**
   * 3-letter ISO 3166-1 code of the country in which the sample was originally collected (MCPD)
   **/
  @ApiModelProperty(value = "3-letter ISO 3166-1 code of the country in which the sample was originally collected (MCPD)")
  public String getCountryOfOriginCode() {
    return countryOfOriginCode;
  }
  public void setCountryOfOriginCode(String countryOfOriginCode) {
    this.countryOfOriginCode = countryOfOriginCode;
  }

  /**
   * Human readable name used for display purposes
   **/
  @ApiModelProperty(value = "Human readable name used for display purposes")
  public String getDefaultDisplayName() {
    return defaultDisplayName;
  }
  public void setDefaultDisplayName(String defaultDisplayName) {
    this.defaultDisplayName = defaultDisplayName;
  }

  /**
   * List of donor institutes (MCPD)
   **/
  @ApiModelProperty(value = "List of donor institutes (MCPD)")
  public List<GermplasmDonors> getDonors() {
    return donors;
  }
  public void setDonors(List<GermplasmDonors> donors) {
    this.donors = donors;
  }

  /**
   * Genus name for taxon. Initial uppercase letter required. (MCPD)
   **/
  @ApiModelProperty(value = "Genus name for taxon. Initial uppercase letter required. (MCPD)")
  public String getGenus() {
    return genus;
  }
  public void setGenus(String genus) {
    this.genus = genus;
  }

  /**
   * The ID which uniquely identifies a germplasm within the given database server
   **/
  @ApiModelProperty(value = "The ID which uniquely identifies a germplasm within the given database server")
  public String getGermplasmDbId() {
    return germplasmDbId;
  }
  public void setGermplasmDbId(String germplasmDbId) {
    this.germplasmDbId = germplasmDbId;
  }

  /**
   * Name of the germplasm. It can be the prefered name and does not have to be unique.
   **/
  @ApiModelProperty(value = "Name of the germplasm. It can be the prefered name and does not have to be unique.")
  public String getGermplasmName() {
    return germplasmName;
  }
  public void setGermplasmName(String germplasmName) {
    this.germplasmName = germplasmName;
  }

  /**
   * The Permanent Unique Identifier which represents a germplasm
   **/
  @ApiModelProperty(value = "The Permanent Unique Identifier which represents a germplasm")
  public String getGermplasmPUI() {
    return germplasmPUI;
  }
  public void setGermplasmPUI(String germplasmPUI) {
    this.germplasmPUI = germplasmPUI;
  }

  /**
   * The code for the Institute that has bred the material. (MCPD)
   **/
  @ApiModelProperty(value = "The code for the Institute that has bred the material. (MCPD)")
  public String getInstituteCode() {
    return instituteCode;
  }
  public void setInstituteCode(String instituteCode) {
    this.instituteCode = instituteCode;
  }

  /**
   * The name of the institution which bred the material (MCPD)
   **/
  @ApiModelProperty(value = "The name of the institution which bred the material (MCPD)")
  public String getInstituteName() {
    return instituteName;
  }
  public void setInstituteName(String instituteName) {
    this.instituteName = instituteName;
  }

  /**
   * The cross name and optional selection history.
   **/
  @ApiModelProperty(value = "The cross name and optional selection history.")
  public String getPedigree() {
    return pedigree;
  }
  public void setPedigree(String pedigree) {
    this.pedigree = pedigree;
  }

  /**
   * The source of the seed 
   **/
  @ApiModelProperty(value = "The source of the seed ")
  public String getSeedSource() {
    return seedSource;
  }
  public void setSeedSource(String seedSource) {
    this.seedSource = seedSource;
  }

  /**
   * Specific epithet portion of the scientific name in lowercase letters. (MCPD)
   **/
  @ApiModelProperty(value = "Specific epithet portion of the scientific name in lowercase letters. (MCPD)")
  public String getSpecies() {
    return species;
  }
  public void setSpecies(String species) {
    this.species = species;
  }

  /**
   * The authority organization responsible for tracking and maintaining the species name (MCPD)
   **/
  @ApiModelProperty(value = "The authority organization responsible for tracking and maintaining the species name (MCPD)")
  public String getSpeciesAuthority() {
    return speciesAuthority;
  }
  public void setSpeciesAuthority(String speciesAuthority) {
    this.speciesAuthority = speciesAuthority;
  }

  /**
   * Subtaxon can be used to store any additional taxonomic identifier. (MCPD)
   **/
  @ApiModelProperty(value = "Subtaxon can be used to store any additional taxonomic identifier. (MCPD)")
  public String getSubtaxa() {
    return subtaxa;
  }
  public void setSubtaxa(String subtaxa) {
    this.subtaxa = subtaxa;
  }

  /**
   *  The authority organization responsible for tracking and maintaining the subtaxon information (MCPD)
   **/
  @ApiModelProperty(value = " The authority organization responsible for tracking and maintaining the subtaxon information (MCPD)")
  public String getSubtaxaAuthority() {
    return subtaxaAuthority;
  }
  public void setSubtaxaAuthority(String subtaxaAuthority) {
    this.subtaxaAuthority = subtaxaAuthority;
  }

  /**
   * List of alternative names or IDs used to reference this germplasm
   **/
  @ApiModelProperty(value = "List of alternative names or IDs used to reference this germplasm")
  public List<String> getSynonyms() {
    return synonyms;
  }
  public void setSynonyms(List<String> synonyms) {
    this.synonyms = synonyms;
  }

  /**
   * The list of IDs for this SPECIES from different sources. If present, NCBI Taxon should be always listed as \"ncbiTaxon\" preferably with a purl. The rank of this ID should be species.
   **/
  @ApiModelProperty(value = "The list of IDs for this SPECIES from different sources. If present, NCBI Taxon should be always listed as \"ncbiTaxon\" preferably with a purl. The rank of this ID should be species.")
  public List<TaxonID> getTaxonIds() {
    return taxonIds;
  }
  public void setTaxonIds(List<TaxonID> taxonIds) {
    this.taxonIds = taxonIds;
  }

  /**
   * The 2 digit code representing the type of storage this germplasm is kept in at a genebank. (MCPD)
   **/
  @ApiModelProperty(value = "The 2 digit code representing the type of storage this germplasm is kept in at a genebank. (MCPD)")
  public List<String> getTypeOfGermplasmStorageCode() {
    return typeOfGermplasmStorageCode;
  }
  public void setTypeOfGermplasmStorageCode(List<String> typeOfGermplasmStorageCode) {
    this.typeOfGermplasmStorageCode = typeOfGermplasmStorageCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Germplasm germplasm = (Germplasm) o;
    return (this.accessionNumber == null ? germplasm.accessionNumber == null : this.accessionNumber.equals(germplasm.accessionNumber)) &&
        (this.acquisitionDate == null ? germplasm.acquisitionDate == null : this.acquisitionDate.equals(germplasm.acquisitionDate)) &&
        (this.biologicalStatusOfAccessionCode == null ? germplasm.biologicalStatusOfAccessionCode == null : this.biologicalStatusOfAccessionCode.equals(germplasm.biologicalStatusOfAccessionCode)) &&
        (this.breedingMethodDbId == null ? germplasm.breedingMethodDbId == null : this.breedingMethodDbId.equals(germplasm.breedingMethodDbId)) &&
        (this.commonCropName == null ? germplasm.commonCropName == null : this.commonCropName.equals(germplasm.commonCropName)) &&
        (this.countryOfOriginCode == null ? germplasm.countryOfOriginCode == null : this.countryOfOriginCode.equals(germplasm.countryOfOriginCode)) &&
        (this.defaultDisplayName == null ? germplasm.defaultDisplayName == null : this.defaultDisplayName.equals(germplasm.defaultDisplayName)) &&
        (this.donors == null ? germplasm.donors == null : this.donors.equals(germplasm.donors)) &&
        (this.genus == null ? germplasm.genus == null : this.genus.equals(germplasm.genus)) &&
        (this.germplasmDbId == null ? germplasm.germplasmDbId == null : this.germplasmDbId.equals(germplasm.germplasmDbId)) &&
        (this.germplasmName == null ? germplasm.germplasmName == null : this.germplasmName.equals(germplasm.germplasmName)) &&
        (this.germplasmPUI == null ? germplasm.germplasmPUI == null : this.germplasmPUI.equals(germplasm.germplasmPUI)) &&
        (this.instituteCode == null ? germplasm.instituteCode == null : this.instituteCode.equals(germplasm.instituteCode)) &&
        (this.instituteName == null ? germplasm.instituteName == null : this.instituteName.equals(germplasm.instituteName)) &&
        (this.pedigree == null ? germplasm.pedigree == null : this.pedigree.equals(germplasm.pedigree)) &&
        (this.seedSource == null ? germplasm.seedSource == null : this.seedSource.equals(germplasm.seedSource)) &&
        (this.species == null ? germplasm.species == null : this.species.equals(germplasm.species)) &&
        (this.speciesAuthority == null ? germplasm.speciesAuthority == null : this.speciesAuthority.equals(germplasm.speciesAuthority)) &&
        (this.subtaxa == null ? germplasm.subtaxa == null : this.subtaxa.equals(germplasm.subtaxa)) &&
        (this.subtaxaAuthority == null ? germplasm.subtaxaAuthority == null : this.subtaxaAuthority.equals(germplasm.subtaxaAuthority)) &&
        (this.synonyms == null ? germplasm.synonyms == null : this.synonyms.equals(germplasm.synonyms)) &&
        (this.taxonIds == null ? germplasm.taxonIds == null : this.taxonIds.equals(germplasm.taxonIds)) &&
        (this.typeOfGermplasmStorageCode == null ? germplasm.typeOfGermplasmStorageCode == null : this.typeOfGermplasmStorageCode.equals(germplasm.typeOfGermplasmStorageCode));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.accessionNumber == null ? 0: this.accessionNumber.hashCode());
    result = 31 * result + (this.acquisitionDate == null ? 0: this.acquisitionDate.hashCode());
    result = 31 * result + (this.biologicalStatusOfAccessionCode == null ? 0: this.biologicalStatusOfAccessionCode.hashCode());
    result = 31 * result + (this.breedingMethodDbId == null ? 0: this.breedingMethodDbId.hashCode());
    result = 31 * result + (this.commonCropName == null ? 0: this.commonCropName.hashCode());
    result = 31 * result + (this.countryOfOriginCode == null ? 0: this.countryOfOriginCode.hashCode());
    result = 31 * result + (this.defaultDisplayName == null ? 0: this.defaultDisplayName.hashCode());
    result = 31 * result + (this.donors == null ? 0: this.donors.hashCode());
    result = 31 * result + (this.genus == null ? 0: this.genus.hashCode());
    result = 31 * result + (this.germplasmDbId == null ? 0: this.germplasmDbId.hashCode());
    result = 31 * result + (this.germplasmName == null ? 0: this.germplasmName.hashCode());
    result = 31 * result + (this.germplasmPUI == null ? 0: this.germplasmPUI.hashCode());
    result = 31 * result + (this.instituteCode == null ? 0: this.instituteCode.hashCode());
    result = 31 * result + (this.instituteName == null ? 0: this.instituteName.hashCode());
    result = 31 * result + (this.pedigree == null ? 0: this.pedigree.hashCode());
    result = 31 * result + (this.seedSource == null ? 0: this.seedSource.hashCode());
    result = 31 * result + (this.species == null ? 0: this.species.hashCode());
    result = 31 * result + (this.speciesAuthority == null ? 0: this.speciesAuthority.hashCode());
    result = 31 * result + (this.subtaxa == null ? 0: this.subtaxa.hashCode());
    result = 31 * result + (this.subtaxaAuthority == null ? 0: this.subtaxaAuthority.hashCode());
    result = 31 * result + (this.synonyms == null ? 0: this.synonyms.hashCode());
    result = 31 * result + (this.taxonIds == null ? 0: this.taxonIds.hashCode());
    result = 31 * result + (this.typeOfGermplasmStorageCode == null ? 0: this.typeOfGermplasmStorageCode.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Germplasm {\n");
    
    sb.append("  accessionNumber: ").append(accessionNumber).append("\n");
    sb.append("  acquisitionDate: ").append(acquisitionDate).append("\n");
    sb.append("  biologicalStatusOfAccessionCode: ").append(biologicalStatusOfAccessionCode).append("\n");
    sb.append("  breedingMethodDbId: ").append(breedingMethodDbId).append("\n");
    sb.append("  commonCropName: ").append(commonCropName).append("\n");
    sb.append("  countryOfOriginCode: ").append(countryOfOriginCode).append("\n");
    sb.append("  defaultDisplayName: ").append(defaultDisplayName).append("\n");
    sb.append("  donors: ").append(donors).append("\n");
    sb.append("  genus: ").append(genus).append("\n");
    sb.append("  germplasmDbId: ").append(germplasmDbId).append("\n");
    sb.append("  germplasmName: ").append(germplasmName).append("\n");
    sb.append("  germplasmPUI: ").append(germplasmPUI).append("\n");
    sb.append("  instituteCode: ").append(instituteCode).append("\n");
    sb.append("  instituteName: ").append(instituteName).append("\n");
    sb.append("  pedigree: ").append(pedigree).append("\n");
    sb.append("  seedSource: ").append(seedSource).append("\n");
    sb.append("  species: ").append(species).append("\n");
    sb.append("  speciesAuthority: ").append(speciesAuthority).append("\n");
    sb.append("  subtaxa: ").append(subtaxa).append("\n");
    sb.append("  subtaxaAuthority: ").append(subtaxaAuthority).append("\n");
    sb.append("  synonyms: ").append(synonyms).append("\n");
    sb.append("  taxonIds: ").append(taxonIds).append("\n");
    sb.append("  typeOfGermplasmStorageCode: ").append(typeOfGermplasmStorageCode).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
