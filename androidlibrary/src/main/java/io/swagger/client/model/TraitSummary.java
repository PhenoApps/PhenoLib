/**
 * BrAPI
 * The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.  <strong>General Reference Documentation</strong> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md\">Asynchronous Processing</a>
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

@ApiModel(description = "")
public class TraitSummary implements Serializable {
  
  @SerializedName("defaultValue")
  private String defaultValue = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("observationVariables")
  private List<String> observationVariables = null;
  @SerializedName("traitDbId")
  private String traitDbId = null;
  @SerializedName("traitId")
  private String traitId = null;

  /**
   * The default value of a trait (if applicable) ex. \"0\", \"\", \"null\"
   **/
  @ApiModelProperty(value = "The default value of a trait (if applicable) ex. \"0\", \"\", \"null\"")
  public String getDefaultValue() {
    return defaultValue;
  }
  public void setDefaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
  }

  /**
   * The description of a trait
   **/
  @ApiModelProperty(value = "The description of a trait")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * The human readable name of a trait
   **/
  @ApiModelProperty(value = "The human readable name of a trait")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * List of observation variable DbIds which include this trait
   **/
  @ApiModelProperty(value = "List of observation variable DbIds which include this trait")
  public List<String> getObservationVariables() {
    return observationVariables;
  }
  public void setObservationVariables(List<String> observationVariables) {
    this.observationVariables = observationVariables;
  }

  /**
   * The ID which uniquely identifies a trait
   **/
  @ApiModelProperty(value = "The ID which uniquely identifies a trait")
  public String getTraitDbId() {
    return traitDbId;
  }
  public void setTraitDbId(String traitDbId) {
    this.traitDbId = traitDbId;
  }

  /**
   * <strong>DEPRECATED</strong> The ID which uniquely identifies a trait
   **/
  @ApiModelProperty(value = "<strong>DEPRECATED</strong> The ID which uniquely identifies a trait")
  public String getTraitId() {
    return traitId;
  }
  public void setTraitId(String traitId) {
    this.traitId = traitId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TraitSummary traitSummary = (TraitSummary) o;
    return (this.defaultValue == null ? traitSummary.defaultValue == null : this.defaultValue.equals(traitSummary.defaultValue)) &&
        (this.description == null ? traitSummary.description == null : this.description.equals(traitSummary.description)) &&
        (this.name == null ? traitSummary.name == null : this.name.equals(traitSummary.name)) &&
        (this.observationVariables == null ? traitSummary.observationVariables == null : this.observationVariables.equals(traitSummary.observationVariables)) &&
        (this.traitDbId == null ? traitSummary.traitDbId == null : this.traitDbId.equals(traitSummary.traitDbId)) &&
        (this.traitId == null ? traitSummary.traitId == null : this.traitId.equals(traitSummary.traitId));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.defaultValue == null ? 0: this.defaultValue.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.observationVariables == null ? 0: this.observationVariables.hashCode());
    result = 31 * result + (this.traitDbId == null ? 0: this.traitDbId.hashCode());
    result = 31 * result + (this.traitId == null ? 0: this.traitId.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class TraitSummary {\n");
    
    sb.append("  defaultValue: ").append(defaultValue).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  observationVariables: ").append(observationVariables).append("\n");
    sb.append("  traitDbId: ").append(traitDbId).append("\n");
    sb.append("  traitId: ").append(traitId).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
