/**
 * BrAPI
 * The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.  <strong>General Reference Documentation</strong> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md\">Asynchronous Processing</a>
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.GermplasmSummary;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

@ApiModel(description = "")
public class GermplasmSummaryList implements Serializable {
  
  @SerializedName("data")
  private List<GermplasmSummary> data = null;
  @SerializedName("studyDbId")
  private String studyDbId = null;
  @SerializedName("trialName")
  private String trialName = null;

  /**
   * List of germplasm associated with a given trial and study
   **/
  @ApiModelProperty(value = "List of germplasm associated with a given trial and study")
  public List<GermplasmSummary> getData() {
    return data;
  }
  public void setData(List<GermplasmSummary> data) {
    this.data = data;
  }

  /**
   * The ID which uniquely identifies a study within the given database server
   **/
  @ApiModelProperty(value = "The ID which uniquely identifies a study within the given database server")
  public String getStudyDbId() {
    return studyDbId;
  }
  public void setStudyDbId(String studyDbId) {
    this.studyDbId = studyDbId;
  }

  /**
   * The human readable name of a trial
   **/
  @ApiModelProperty(value = "The human readable name of a trial")
  public String getTrialName() {
    return trialName;
  }
  public void setTrialName(String trialName) {
    this.trialName = trialName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GermplasmSummaryList germplasmSummaryList = (GermplasmSummaryList) o;
    return (this.data == null ? germplasmSummaryList.data == null : this.data.equals(germplasmSummaryList.data)) &&
        (this.studyDbId == null ? germplasmSummaryList.studyDbId == null : this.studyDbId.equals(germplasmSummaryList.studyDbId)) &&
        (this.trialName == null ? germplasmSummaryList.trialName == null : this.trialName.equals(germplasmSummaryList.trialName));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.data == null ? 0: this.data.hashCode());
    result = 31 * result + (this.studyDbId == null ? 0: this.studyDbId.hashCode());
    result = 31 * result + (this.trialName == null ? 0: this.trialName.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class GermplasmSummaryList {\n");
    
    sb.append("  data: ").append(data).append("\n");
    sb.append("  studyDbId: ").append(studyDbId).append("\n");
    sb.append("  trialName: ").append(trialName).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
