/**
 * BrAPI
 * The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.  <strong>General Reference Documentation</strong> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md\">Asynchronous Processing</a>
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.*;
import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

@ApiModel(description = "")
public class PhenotypesSearchRequest implements Serializable {
  
  @SerializedName("germplasmDbIds")
  private List<String> germplasmDbIds = null;
  @SerializedName("locationDbIds")
  private List<String> locationDbIds = null;
  @SerializedName("observationLevel")
  private String observationLevel = null;
  @SerializedName("observationTimeStampRangeEnd")
  private Date observationTimeStampRangeEnd = null;
  @SerializedName("observationTimeStampRangeStart")
  private Date observationTimeStampRangeStart = null;
  @SerializedName("observationVariableDbIds")
  private List<String> observationVariableDbIds = null;
  @SerializedName("page")
  private Integer page = null;
  @SerializedName("pageSize")
  private Integer pageSize = null;
  @SerializedName("programDbIds")
  private List<String> programDbIds = null;
  @SerializedName("seasonDbIds")
  private List<String> seasonDbIds = null;
  @SerializedName("studyDbIds")
  private List<String> studyDbIds = null;
  @SerializedName("trialDbIds")
  private List<String> trialDbIds = null;

  /**
   * The name or synonym of external genebank accession identifiers
   **/
  @ApiModelProperty(value = "The name or synonym of external genebank accession identifiers")
  public List<String> getGermplasmDbIds() {
    return germplasmDbIds;
  }
  public void setGermplasmDbIds(List<String> germplasmDbIds) {
    this.germplasmDbIds = germplasmDbIds;
  }

  /**
   * locations these traits were collected
   **/
  @ApiModelProperty(value = "locations these traits were collected")
  public List<String> getLocationDbIds() {
    return locationDbIds;
  }
  public void setLocationDbIds(List<String> locationDbIds) {
    this.locationDbIds = locationDbIds;
  }

  /**
   * The type of the observationUnit. Returns only the observation unit of the specified type; the parent levels ID can be accessed through observationUnit Structure.
   **/
  @ApiModelProperty(value = "The type of the observationUnit. Returns only the observation unit of the specified type; the parent levels ID can be accessed through observationUnit Structure.")
  public String getObservationLevel() {
    return observationLevel;
  }
  public void setObservationLevel(String observationLevel) {
    this.observationLevel = observationLevel;
  }

  /**
   * Timestamp range end
   **/
  @ApiModelProperty(value = "Timestamp range end")
  public Date getObservationTimeStampRangeEnd() {
    return observationTimeStampRangeEnd;
  }
  public void setObservationTimeStampRangeEnd(Date observationTimeStampRangeEnd) {
    this.observationTimeStampRangeEnd = observationTimeStampRangeEnd;
  }

  /**
   * Timestamp range start
   **/
  @ApiModelProperty(value = "Timestamp range start")
  public Date getObservationTimeStampRangeStart() {
    return observationTimeStampRangeStart;
  }
  public void setObservationTimeStampRangeStart(Date observationTimeStampRangeStart) {
    this.observationTimeStampRangeStart = observationTimeStampRangeStart;
  }

  /**
   * The IDs of traits, could be ontology ID, database ID or PUI
   **/
  @ApiModelProperty(value = "The IDs of traits, could be ontology ID, database ID or PUI")
  public List<String> getObservationVariableDbIds() {
    return observationVariableDbIds;
  }
  public void setObservationVariableDbIds(List<String> observationVariableDbIds) {
    this.observationVariableDbIds = observationVariableDbIds;
  }

  /**
   * Which page of the \"data\" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.
   **/
  @ApiModelProperty(value = "Which page of the \"data\" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.")
  public Integer getPage() {
    return page;
  }
  public void setPage(Integer page) {
    this.page = page;
  }

  /**
   * The maximum number of items to return per page of the \"data\" array. Default is 1000.
   **/
  @ApiModelProperty(value = "The maximum number of items to return per page of the \"data\" array. Default is 1000.")
  public Integer getPageSize() {
    return pageSize;
  }
  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  /**
   * list of programs to search across
   **/
  @ApiModelProperty(value = "list of programs to search across")
  public List<String> getProgramDbIds() {
    return programDbIds;
  }
  public void setProgramDbIds(List<String> programDbIds) {
    this.programDbIds = programDbIds;
  }

  /**
   * The year or Phenotyping campaign of a multi-annual study (trees, grape, ...)
   **/
  @ApiModelProperty(value = "The year or Phenotyping campaign of a multi-annual study (trees, grape, ...)")
  public List<String> getSeasonDbIds() {
    return seasonDbIds;
  }
  public void setSeasonDbIds(List<String> seasonDbIds) {
    this.seasonDbIds = seasonDbIds;
  }

  /**
   * The database ID / PK of the studies search parameter
   **/
  @ApiModelProperty(value = "The database ID / PK of the studies search parameter")
  public List<String> getStudyDbIds() {
    return studyDbIds;
  }
  public void setStudyDbIds(List<String> studyDbIds) {
    this.studyDbIds = studyDbIds;
  }

  /**
   * list of trials to search across
   **/
  @ApiModelProperty(value = "list of trials to search across")
  public List<String> getTrialDbIds() {
    return trialDbIds;
  }
  public void setTrialDbIds(List<String> trialDbIds) {
    this.trialDbIds = trialDbIds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PhenotypesSearchRequest phenotypesSearchRequest = (PhenotypesSearchRequest) o;
    return (this.germplasmDbIds == null ? phenotypesSearchRequest.germplasmDbIds == null : this.germplasmDbIds.equals(phenotypesSearchRequest.germplasmDbIds)) &&
        (this.locationDbIds == null ? phenotypesSearchRequest.locationDbIds == null : this.locationDbIds.equals(phenotypesSearchRequest.locationDbIds)) &&
        (this.observationLevel == null ? phenotypesSearchRequest.observationLevel == null : this.observationLevel.equals(phenotypesSearchRequest.observationLevel)) &&
        (this.observationTimeStampRangeEnd == null ? phenotypesSearchRequest.observationTimeStampRangeEnd == null : this.observationTimeStampRangeEnd.equals(phenotypesSearchRequest.observationTimeStampRangeEnd)) &&
        (this.observationTimeStampRangeStart == null ? phenotypesSearchRequest.observationTimeStampRangeStart == null : this.observationTimeStampRangeStart.equals(phenotypesSearchRequest.observationTimeStampRangeStart)) &&
        (this.observationVariableDbIds == null ? phenotypesSearchRequest.observationVariableDbIds == null : this.observationVariableDbIds.equals(phenotypesSearchRequest.observationVariableDbIds)) &&
        (this.page == null ? phenotypesSearchRequest.page == null : this.page.equals(phenotypesSearchRequest.page)) &&
        (this.pageSize == null ? phenotypesSearchRequest.pageSize == null : this.pageSize.equals(phenotypesSearchRequest.pageSize)) &&
        (this.programDbIds == null ? phenotypesSearchRequest.programDbIds == null : this.programDbIds.equals(phenotypesSearchRequest.programDbIds)) &&
        (this.seasonDbIds == null ? phenotypesSearchRequest.seasonDbIds == null : this.seasonDbIds.equals(phenotypesSearchRequest.seasonDbIds)) &&
        (this.studyDbIds == null ? phenotypesSearchRequest.studyDbIds == null : this.studyDbIds.equals(phenotypesSearchRequest.studyDbIds)) &&
        (this.trialDbIds == null ? phenotypesSearchRequest.trialDbIds == null : this.trialDbIds.equals(phenotypesSearchRequest.trialDbIds));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.germplasmDbIds == null ? 0: this.germplasmDbIds.hashCode());
    result = 31 * result + (this.locationDbIds == null ? 0: this.locationDbIds.hashCode());
    result = 31 * result + (this.observationLevel == null ? 0: this.observationLevel.hashCode());
    result = 31 * result + (this.observationTimeStampRangeEnd == null ? 0: this.observationTimeStampRangeEnd.hashCode());
    result = 31 * result + (this.observationTimeStampRangeStart == null ? 0: this.observationTimeStampRangeStart.hashCode());
    result = 31 * result + (this.observationVariableDbIds == null ? 0: this.observationVariableDbIds.hashCode());
    result = 31 * result + (this.page == null ? 0: this.page.hashCode());
    result = 31 * result + (this.pageSize == null ? 0: this.pageSize.hashCode());
    result = 31 * result + (this.programDbIds == null ? 0: this.programDbIds.hashCode());
    result = 31 * result + (this.seasonDbIds == null ? 0: this.seasonDbIds.hashCode());
    result = 31 * result + (this.studyDbIds == null ? 0: this.studyDbIds.hashCode());
    result = 31 * result + (this.trialDbIds == null ? 0: this.trialDbIds.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PhenotypesSearchRequest {\n");
    
    sb.append("  germplasmDbIds: ").append(germplasmDbIds).append("\n");
    sb.append("  locationDbIds: ").append(locationDbIds).append("\n");
    sb.append("  observationLevel: ").append(observationLevel).append("\n");
    sb.append("  observationTimeStampRangeEnd: ").append(observationTimeStampRangeEnd).append("\n");
    sb.append("  observationTimeStampRangeStart: ").append(observationTimeStampRangeStart).append("\n");
    sb.append("  observationVariableDbIds: ").append(observationVariableDbIds).append("\n");
    sb.append("  page: ").append(page).append("\n");
    sb.append("  pageSize: ").append(pageSize).append("\n");
    sb.append("  programDbIds: ").append(programDbIds).append("\n");
    sb.append("  seasonDbIds: ").append(seasonDbIds).append("\n");
    sb.append("  studyDbIds: ").append(studyDbIds).append("\n");
    sb.append("  trialDbIds: ").append(trialDbIds).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
