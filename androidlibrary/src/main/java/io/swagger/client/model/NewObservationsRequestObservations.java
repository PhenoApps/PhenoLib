/**
 * BrAPI
 * The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.  <strong>General Reference Documentation</strong> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md\">Asynchronous Processing</a>
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

@ApiModel(description = "")
public class NewObservationsRequestObservations implements Serializable {
  
  @SerializedName("collector")
  private String collector = null;
  @SerializedName("observationDbId")
  private String observationDbId = null;
  @SerializedName("observationTimeStamp")
  private Date observationTimeStamp = null;
  @SerializedName("observationUnitDbId")
  private String observationUnitDbId = null;
  @SerializedName("observationVariableDbId")
  private String observationVariableDbId = null;
  @SerializedName("value")
  private String value = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCollector() {
    return collector;
  }
  public void setCollector(String collector) {
    this.collector = collector;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getObservationDbId() {
    return observationDbId;
  }
  public void setObservationDbId(String observationDbId) {
    this.observationDbId = observationDbId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getObservationTimeStamp() {
    return observationTimeStamp;
  }
  public void setObservationTimeStamp(Date observationTimeStamp) {
    this.observationTimeStamp = observationTimeStamp;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getObservationUnitDbId() {
    return observationUnitDbId;
  }
  public void setObservationUnitDbId(String observationUnitDbId) {
    this.observationUnitDbId = observationUnitDbId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getObservationVariableDbId() {
    return observationVariableDbId;
  }
  public void setObservationVariableDbId(String observationVariableDbId) {
    this.observationVariableDbId = observationVariableDbId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getValue() {
    return value;
  }
  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NewObservationsRequestObservations newObservationsRequestObservations = (NewObservationsRequestObservations) o;
    return (this.collector == null ? newObservationsRequestObservations.collector == null : this.collector.equals(newObservationsRequestObservations.collector)) &&
        (this.observationDbId == null ? newObservationsRequestObservations.observationDbId == null : this.observationDbId.equals(newObservationsRequestObservations.observationDbId)) &&
        (this.observationTimeStamp == null ? newObservationsRequestObservations.observationTimeStamp == null : this.observationTimeStamp.equals(newObservationsRequestObservations.observationTimeStamp)) &&
        (this.observationUnitDbId == null ? newObservationsRequestObservations.observationUnitDbId == null : this.observationUnitDbId.equals(newObservationsRequestObservations.observationUnitDbId)) &&
        (this.observationVariableDbId == null ? newObservationsRequestObservations.observationVariableDbId == null : this.observationVariableDbId.equals(newObservationsRequestObservations.observationVariableDbId)) &&
        (this.value == null ? newObservationsRequestObservations.value == null : this.value.equals(newObservationsRequestObservations.value));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.collector == null ? 0: this.collector.hashCode());
    result = 31 * result + (this.observationDbId == null ? 0: this.observationDbId.hashCode());
    result = 31 * result + (this.observationTimeStamp == null ? 0: this.observationTimeStamp.hashCode());
    result = 31 * result + (this.observationUnitDbId == null ? 0: this.observationUnitDbId.hashCode());
    result = 31 * result + (this.observationVariableDbId == null ? 0: this.observationVariableDbId.hashCode());
    result = 31 * result + (this.value == null ? 0: this.value.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class NewObservationsRequestObservations {\n");
    
    sb.append("  collector: ").append(collector).append("\n");
    sb.append("  observationDbId: ").append(observationDbId).append("\n");
    sb.append("  observationTimeStamp: ").append(observationTimeStamp).append("\n");
    sb.append("  observationUnitDbId: ").append(observationUnitDbId).append("\n");
    sb.append("  observationVariableDbId: ").append(observationVariableDbId).append("\n");
    sb.append("  value: ").append(value).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
