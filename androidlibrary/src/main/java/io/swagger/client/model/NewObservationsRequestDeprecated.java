/**
 * BrAPI
 * The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.  <strong>General Reference Documentation</strong> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md\">Asynchronous Processing</a>
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.NewObservationsRequestDeprecatedData;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

@ApiModel(description = "")
public class NewObservationsRequestDeprecated implements Serializable {
  
  @SerializedName("commit")
  private String commit = null;
  @SerializedName("data")
  private List<NewObservationsRequestDeprecatedData> data = null;
  @SerializedName("transactionDbId")
  private String transactionDbId = null;

  /**
   * Should these changes be commited
   **/
  @ApiModelProperty(value = "Should these changes be commited")
  public String getCommit() {
    return commit;
  }
  public void setCommit(String commit) {
    this.commit = commit;
  }

  /**
   * <strong>Required</strong> array of marker-name/score pairs
   **/
  @ApiModelProperty(value = "<strong>Required</strong> array of marker-name/score pairs")
  public List<NewObservationsRequestDeprecatedData> getData() {
    return data;
  }
  public void setData(List<NewObservationsRequestDeprecatedData> data) {
    this.data = data;
  }

  /**
   * The ID representing this transaction
   **/
  @ApiModelProperty(value = "The ID representing this transaction")
  public String getTransactionDbId() {
    return transactionDbId;
  }
  public void setTransactionDbId(String transactionDbId) {
    this.transactionDbId = transactionDbId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NewObservationsRequestDeprecated newObservationsRequestDeprecated = (NewObservationsRequestDeprecated) o;
    return (this.commit == null ? newObservationsRequestDeprecated.commit == null : this.commit.equals(newObservationsRequestDeprecated.commit)) &&
        (this.data == null ? newObservationsRequestDeprecated.data == null : this.data.equals(newObservationsRequestDeprecated.data)) &&
        (this.transactionDbId == null ? newObservationsRequestDeprecated.transactionDbId == null : this.transactionDbId.equals(newObservationsRequestDeprecated.transactionDbId));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.commit == null ? 0: this.commit.hashCode());
    result = 31 * result + (this.data == null ? 0: this.data.hashCode());
    result = 31 * result + (this.transactionDbId == null ? 0: this.transactionDbId.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class NewObservationsRequestDeprecated {\n");
    
    sb.append("  commit: ").append(commit).append("\n");
    sb.append("  data: ").append(data).append("\n");
    sb.append("  transactionDbId: ").append(transactionDbId).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
