/**
 * BrAPI
 * The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.  <strong>General Reference Documentation</strong> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a> <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md\">Asynchronous Processing</a>
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

@ApiModel(description = "")
public class StudySearchRequest implements Serializable {
  
  @SerializedName("active")
  private Boolean active = null;
  @SerializedName("germplasmDbIds")
  private List<String> germplasmDbIds = null;
  @SerializedName("locationDbIds")
  private List<String> locationDbIds = null;
  @SerializedName("observationVariableDbIds")
  private List<String> observationVariableDbIds = null;
  @SerializedName("page")
  private Integer page = null;
  @SerializedName("pageSize")
  private Integer pageSize = null;
  @SerializedName("programDbIds")
  private List<String> programDbIds = null;
  @SerializedName("programNames")
  private List<String> programNames = null;
  @SerializedName("seasonDbId")
  private List<String> seasonDbId = null;
  public enum SortByEnum {
     studyDbId,  trialDbId,  programDbId,  locationDbId,  seasonDbId,  studyType,  studyName,  studyLocation,  programName,  germplasmDbId,  observationVariableDbId, 
  };
  @SerializedName("sortBy")
  private SortByEnum sortBy = null;
  public enum SortOrderEnum {
     asc,  desc, 
  };
  @SerializedName("sortOrder")
  private SortOrderEnum sortOrder = null;
  @SerializedName("studyDbIds")
  private List<String> studyDbIds = null;
  @SerializedName("studyLocations")
  private List<String> studyLocations = null;
  @SerializedName("studyNames")
  private List<String> studyNames = null;
  @SerializedName("studyType")
  private String studyType = null;
  @SerializedName("trialDbIds")
  private List<String> trialDbIds = null;

  /**
   * Is this study currently active
   **/
  @ApiModelProperty(value = "Is this study currently active")
  public Boolean getActive() {
    return active;
  }
  public void setActive(Boolean active) {
    this.active = active;
  }

  /**
   * List of IDs which uniquely identify germplasm
   **/
  @ApiModelProperty(value = "List of IDs which uniquely identify germplasm")
  public List<String> getGermplasmDbIds() {
    return germplasmDbIds;
  }
  public void setGermplasmDbIds(List<String> germplasmDbIds) {
    this.germplasmDbIds = germplasmDbIds;
  }

  /**
   * List of location identifiers to filter search results
   **/
  @ApiModelProperty(value = "List of location identifiers to filter search results")
  public List<String> getLocationDbIds() {
    return locationDbIds;
  }
  public void setLocationDbIds(List<String> locationDbIds) {
    this.locationDbIds = locationDbIds;
  }

  /**
   * List of observation variable IDs to search for
   **/
  @ApiModelProperty(value = "List of observation variable IDs to search for")
  public List<String> getObservationVariableDbIds() {
    return observationVariableDbIds;
  }
  public void setObservationVariableDbIds(List<String> observationVariableDbIds) {
    this.observationVariableDbIds = observationVariableDbIds;
  }

  /**
   * Which page of the \"data\" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.
   **/
  @ApiModelProperty(value = "Which page of the \"data\" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.")
  public Integer getPage() {
    return page;
  }
  public void setPage(Integer page) {
    this.page = page;
  }

  /**
   * The maximum number of items to return per page of the \"data\" array. Default is 1000.
   **/
  @ApiModelProperty(value = "The maximum number of items to return per page of the \"data\" array. Default is 1000.")
  public Integer getPageSize() {
    return pageSize;
  }
  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  /**
   * List of program identifiers to filter search results
   **/
  @ApiModelProperty(value = "List of program identifiers to filter search results")
  public List<String> getProgramDbIds() {
    return programDbIds;
  }
  public void setProgramDbIds(List<String> programDbIds) {
    this.programDbIds = programDbIds;
  }

  /**
   * List of program names to filter search results
   **/
  @ApiModelProperty(value = "List of program names to filter search results")
  public List<String> getProgramNames() {
    return programNames;
  }
  public void setProgramNames(List<String> programNames) {
    this.programNames = programNames;
  }

  /**
   * The ID which uniquely identifies a season
   **/
  @ApiModelProperty(value = "The ID which uniquely identifies a season")
  public List<String> getSeasonDbId() {
    return seasonDbId;
  }
  public void setSeasonDbId(List<String> seasonDbId) {
    this.seasonDbId = seasonDbId;
  }

  /**
   * Name of one of the fields within the study object on which results can be sorted
   **/
  @ApiModelProperty(value = "Name of one of the fields within the study object on which results can be sorted")
  public SortByEnum getSortBy() {
    return sortBy;
  }
  public void setSortBy(SortByEnum sortBy) {
    this.sortBy = sortBy;
  }

  /**
   * Order results should be sorted. ex. \"ASC\" or \"DESC\"
   **/
  @ApiModelProperty(value = "Order results should be sorted. ex. \"ASC\" or \"DESC\"")
  public SortOrderEnum getSortOrder() {
    return sortOrder;
  }
  public void setSortOrder(SortOrderEnum sortOrder) {
    this.sortOrder = sortOrder;
  }

  /**
   * List of study identifiers to search for
   **/
  @ApiModelProperty(value = "List of study identifiers to search for")
  public List<String> getStudyDbIds() {
    return studyDbIds;
  }
  public void setStudyDbIds(List<String> studyDbIds) {
    this.studyDbIds = studyDbIds;
  }

  /**
   * List of location names to filter search results
   **/
  @ApiModelProperty(value = "List of location names to filter search results")
  public List<String> getStudyLocations() {
    return studyLocations;
  }
  public void setStudyLocations(List<String> studyLocations) {
    this.studyLocations = studyLocations;
  }

  /**
   * List of study names to filter search results
   **/
  @ApiModelProperty(value = "List of study names to filter search results")
  public List<String> getStudyNames() {
    return studyNames;
  }
  public void setStudyNames(List<String> studyNames) {
    this.studyNames = studyNames;
  }

  /**
   * The type of study being performed. ex. \"Yeald Trial\", etc
   **/
  @ApiModelProperty(value = "The type of study being performed. ex. \"Yeald Trial\", etc")
  public String getStudyType() {
    return studyType;
  }
  public void setStudyType(String studyType) {
    this.studyType = studyType;
  }

  /**
   * List of trial identifiers to filter search results
   **/
  @ApiModelProperty(value = "List of trial identifiers to filter search results")
  public List<String> getTrialDbIds() {
    return trialDbIds;
  }
  public void setTrialDbIds(List<String> trialDbIds) {
    this.trialDbIds = trialDbIds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StudySearchRequest studySearchRequest = (StudySearchRequest) o;
    return (this.active == null ? studySearchRequest.active == null : this.active.equals(studySearchRequest.active)) &&
        (this.germplasmDbIds == null ? studySearchRequest.germplasmDbIds == null : this.germplasmDbIds.equals(studySearchRequest.germplasmDbIds)) &&
        (this.locationDbIds == null ? studySearchRequest.locationDbIds == null : this.locationDbIds.equals(studySearchRequest.locationDbIds)) &&
        (this.observationVariableDbIds == null ? studySearchRequest.observationVariableDbIds == null : this.observationVariableDbIds.equals(studySearchRequest.observationVariableDbIds)) &&
        (this.page == null ? studySearchRequest.page == null : this.page.equals(studySearchRequest.page)) &&
        (this.pageSize == null ? studySearchRequest.pageSize == null : this.pageSize.equals(studySearchRequest.pageSize)) &&
        (this.programDbIds == null ? studySearchRequest.programDbIds == null : this.programDbIds.equals(studySearchRequest.programDbIds)) &&
        (this.programNames == null ? studySearchRequest.programNames == null : this.programNames.equals(studySearchRequest.programNames)) &&
        (this.seasonDbId == null ? studySearchRequest.seasonDbId == null : this.seasonDbId.equals(studySearchRequest.seasonDbId)) &&
        (this.sortBy == null ? studySearchRequest.sortBy == null : this.sortBy.equals(studySearchRequest.sortBy)) &&
        (this.sortOrder == null ? studySearchRequest.sortOrder == null : this.sortOrder.equals(studySearchRequest.sortOrder)) &&
        (this.studyDbIds == null ? studySearchRequest.studyDbIds == null : this.studyDbIds.equals(studySearchRequest.studyDbIds)) &&
        (this.studyLocations == null ? studySearchRequest.studyLocations == null : this.studyLocations.equals(studySearchRequest.studyLocations)) &&
        (this.studyNames == null ? studySearchRequest.studyNames == null : this.studyNames.equals(studySearchRequest.studyNames)) &&
        (this.studyType == null ? studySearchRequest.studyType == null : this.studyType.equals(studySearchRequest.studyType)) &&
        (this.trialDbIds == null ? studySearchRequest.trialDbIds == null : this.trialDbIds.equals(studySearchRequest.trialDbIds));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.active == null ? 0: this.active.hashCode());
    result = 31 * result + (this.germplasmDbIds == null ? 0: this.germplasmDbIds.hashCode());
    result = 31 * result + (this.locationDbIds == null ? 0: this.locationDbIds.hashCode());
    result = 31 * result + (this.observationVariableDbIds == null ? 0: this.observationVariableDbIds.hashCode());
    result = 31 * result + (this.page == null ? 0: this.page.hashCode());
    result = 31 * result + (this.pageSize == null ? 0: this.pageSize.hashCode());
    result = 31 * result + (this.programDbIds == null ? 0: this.programDbIds.hashCode());
    result = 31 * result + (this.programNames == null ? 0: this.programNames.hashCode());
    result = 31 * result + (this.seasonDbId == null ? 0: this.seasonDbId.hashCode());
    result = 31 * result + (this.sortBy == null ? 0: this.sortBy.hashCode());
    result = 31 * result + (this.sortOrder == null ? 0: this.sortOrder.hashCode());
    result = 31 * result + (this.studyDbIds == null ? 0: this.studyDbIds.hashCode());
    result = 31 * result + (this.studyLocations == null ? 0: this.studyLocations.hashCode());
    result = 31 * result + (this.studyNames == null ? 0: this.studyNames.hashCode());
    result = 31 * result + (this.studyType == null ? 0: this.studyType.hashCode());
    result = 31 * result + (this.trialDbIds == null ? 0: this.trialDbIds.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class StudySearchRequest {\n");
    
    sb.append("  active: ").append(active).append("\n");
    sb.append("  germplasmDbIds: ").append(germplasmDbIds).append("\n");
    sb.append("  locationDbIds: ").append(locationDbIds).append("\n");
    sb.append("  observationVariableDbIds: ").append(observationVariableDbIds).append("\n");
    sb.append("  page: ").append(page).append("\n");
    sb.append("  pageSize: ").append(pageSize).append("\n");
    sb.append("  programDbIds: ").append(programDbIds).append("\n");
    sb.append("  programNames: ").append(programNames).append("\n");
    sb.append("  seasonDbId: ").append(seasonDbId).append("\n");
    sb.append("  sortBy: ").append(sortBy).append("\n");
    sb.append("  sortOrder: ").append(sortOrder).append("\n");
    sb.append("  studyDbIds: ").append(studyDbIds).append("\n");
    sb.append("  studyLocations: ").append(studyLocations).append("\n");
    sb.append("  studyNames: ").append(studyNames).append("\n");
    sb.append("  studyType: ").append(studyType).append("\n");
    sb.append("  trialDbIds: ").append(trialDbIds).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
